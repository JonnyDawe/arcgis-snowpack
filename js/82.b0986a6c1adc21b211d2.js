(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{516:function(e,t,r){"use strict";r.r(t);var s=r(0),a=r(1),i=r(109),n=r(314),o=r(337),c=r(385),l=r(313),d=r(344),h=r(339),u=r(415);r(4),r(6),r(13),r(21),r(62),r(26),r(24),r(85),r(48),r(20),r(9),r(3),r(52),r(70),r(10),r(49),r(111),r(71),r(333),r(320),r(330),r(84),r(106),r(7),r(8),r(31),r(19),r(35),r(54),r(334),r(338),r(322),r(17),r(83),r(324),r(312),r(310),r(340),r(14),r(16),r(51),r(82),r(331),r(341),r(321),r(113),r(41),r(327),r(86),r(137),r(328),r(329),r(104),r(40),r(5);function m(e){const t=e.message,r={message:{data:{},tileKey:t.tileKey},transferList:new Array};for(const e in t.data){const a=t.data[e];if(r.message.data[e]=null,Object(s.P)(a)){const t=a.stride,i=a.indices.slice(0),n=a.vertices.slice(0),o=a.records.slice(0),c={stride:t,indices:i,vertices:n,records:o,metrics:Object(s.c6)(a.metrics,(e=>e.slice(0)))};r.transferList.push(i,n,o),r.message.data[e]=c}}return r}s.n.getLogger("esri.views.2d.layers.features.processors.SymbolProcessor");let f=class extends u.a{constructor(){super(...arguments),this.type="symbol",this._matchers={feature:null,aggregate:null},this._bufferData=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])}destroy(){}get supportsTileUpdates(){return!0}async update(e,t){const r=t.schema.processors[0];if("symbol"!==r.type)return;const s=Object(i.b)(this._schema,r);Object(i.a)(s,"mesh")&&(Object(a.a)("esri-2d-update-debug")&&console.debug("Applying Update - Processor:",s),e.mesh=!0,e.why.mesh.push("Symbology changed"),this._schema=r,this._factory=this._createFactory(r),this._factory.update(r,this.tileStore.tileScheme.tileInfo))}onTileMessage(e,t,r,a){return Object(s.h)(a),this._onTileData(e,t,r,a)}onTileClear(e){return this._bufferData.delete(e.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:{clear:!0}})}onTileError(e,t,r){const s=r.signal,a={tileKey:e.id,error:t};return this.remoteClient.invoke("tileRenderer.onTileError",a,{signal:s})}onTileUpdate(e){for(const t of e.removed)this._bufferData.has(t.key.id)&&(this._bufferData.get(t.key.id).forEach((e=>{const t=new Set;Object(l.w)((r=>{const a=e.message.data[r];if(Object(s.P)(a)){const e=d.c.from(a.records).getCursor();for(;e.next();)t.add(e.id)}}));const r=e.message.tileKey;return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:r,data:{type:"update",addOrUpdate:null}})})),this._bufferData.delete(t.key.id));for(const t of e.added)this._bufferData.forEach((e=>{for(const r of e)r.message.tileKey===t.id&&this._updateTileMesh("append",t,m(r),[],!1,!1,null)}))}_addBufferData(e,t){this._bufferData.has(e)||this._bufferData.set(e,[]),this._bufferData.get(e).push(m(t))}_createFactory(e){const{geometryType:t,objectIdField:r,fields:a}=this.service,i={geometryType:t,fields:a,spatialReference:s.A.fromJSON(this.spatialReference)},n=new d.j(((e,t)=>this.remoteClient.invoke("tileRenderer.getMaterialItems",e,t)),!1),{matcher:o,aggregateMatcher:c}=e.mesh;return this._store=n,this._matchers.feature=Object(d.l)(o,n,i),this._matchers.aggregate=Object(s.c6)(c,(e=>Object(d.l)(e,n,i))),new d.e(t,r,n)}async _onTileData(e,t,r,a){const{type:i,addOrUpdate:n,remove:o}=t,c=t.end;if(!n){const t={type:i,addOrUpdate:null,remove:o,clear:!1,end:c};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t},a)}const l=this._processFeatures(e,n,r,a);try{const r=await l;if(Object(s.J)(r)){const t={type:i,addOrUpdate:null,remove:o,clear:!1,end:c};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t},a)}for(const t of r)e.key.id!==t.message.tileKey&&this._addBufferData(e.key.id,t);await Object(s.cD)(r.map((r=>{const s=e.key.id===r.message.tileKey,n=s?t.remove:[],o=s&&t.end;return this._updateTileMesh(i,e,r,n,o,t.clear,a.signal)})))}catch(t){this._handleError(e,t,a)}}async _updateTileMesh(e,t,r,a,i,n,o){const c=e,l=r.message.tileKey;l!==t.key.id&&(i=!1);const d=Object(s.c6)(r,(e=>e.message)),h=Object(s.c6)(r,(e=>e.transferList))||[],u={type:c,addOrUpdate:d,remove:a,clear:!1,end:i},m={transferList:Object(s.Y)(h)||[],signal:o};return Object(s.h)(m),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:l,data:u},m)}async _processFeatures(e,t,r,a){if(Object(s.J)(t)||!t.hasFeatures)return null;const i={transform:e.transform,hasZ:!1,hasM:!1},n=this._factory,o={viewingMode:"",scale:e.scale},c=await this._matchers.feature,l=await this._matchers.aggregate;Object(s.h)(a);const d=this._getLabelInfos(e,t);return await n.analyze(t.getCursor(),c,l,i,o),Object(s.h)(a),this._writeFeatureSet(e,t,i,d,n,r)}_writeFeatureSet(e,t,r,a,i,n){const o=t.getApproximateSize(),c="simple"===this._schema.mesh.matcher.type&&this._schema.mesh.matcher.isDotDensity,l=new d.a(e.key.id,{features:o,records:o,metrics:0},c,n,!0),h={viewingMode:"",scale:e.scale},u=t.getCursor();for(;u.next();)try{const t=u.getDisplayId(),n=Object(s.P)(a)?a.get(t):null;i.writeCursor(l,u,r,h,e.level,n)}catch(e){}const m=e.tileInfoView.tileInfo.isWrappable;return l.serialize(m)}_handleError(e,t,r){if(!Object(s.B)(t)){const s={tileKey:e.id,error:t.message};return this.remoteClient.invoke("tileRenderer.onTileError",s,{signal:r.signal})}}_getLabelInfos(e,t){const r=this._schema.mesh.labels,a=Object(s.c6)(r,(t=>t.filter((t=>function(e,t){return(!e.minScale||e.minScale>=t)&&(!e.maxScale||e.maxScale<=t)}(t,e.scale)))));if(Object(s.J)(a)||0===a.length)return null;const i=new Map,l=(new c.c(n.x),t.getCursor());for(;l.next();){const e=l.getDisplayId(),t=[],r=Object(h.g)(e),s=r&&1!==l.readAttribute("cluster_count")?"aggregate":"feature";for(const i of a){if(i.target!==s)continue;const a=l.getStorage(),n=r&&"feature"===s?a.getComputedStringAtIndex(l.readAttribute("referenceId"),i.fieldIndex):a.getComputedStringAtIndex(e,i.fieldIndex);if(!n)continue;const c=Object(o.A)(n.toString()),h=c[0],u=c[1];this._store.getMosaicItem(i.symbol,Object(d.h)(h)).then((e=>{t[i.index]={glyphs:e.glyphMosaicItems,rtl:u,index:i.index}}))}i.set(e,t)}return i}_shouldDiscard(e,t){switch(this.service.geometryType){case"esriGeometryPoint":{const r=t.readLegacyPointGeometry();return!r||e.checkOverlap(r.x,r.y)}case"esriGeometryPolygon":{const r=t.readLegacyCentroid();return!r||e.checkOverlap(r.x,r.y)}default:return!1}}_markUsed(e,t){switch(this.service.geometryType){case"esriGeometryPoint":{const{x:r,y:s}=t.readLegacyPointGeometry();return e.markUsed(r,s)}case"esriGeometryPolygon":{const{x:r,y:s}=t.readLegacyCentroid();return e.markUsed(r,s)}}}};f=Object(s.e)([Object(s.i)("esri.views.2d.layers.features.processors.SymbolProcessor")],f);var y=f;t.default=y}}]);