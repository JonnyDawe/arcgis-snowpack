(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{295:function(e,t,n){"use strict";n.r(t),n.d(t,"ElevationSamplerWorker",(function(){return s}));n(76),n(163),n(18);var r=n(1),o=n(0),a=n(358);n(329),n(310);class s{async createIndex(e,t){const n=new Array;if(!e.vertexAttributes||!e.vertexAttributes.position)return new a.a;const r=this.createMeshData(e),s=Object(o.P)(t)?await t.invoke("createIndexThread",r,{transferList:n}):this.createIndexThread(r).result;return this.createPooledRBush().fromJSON(s)}createIndexThread(e){const t=new Float64Array(e.position),n=this.createPooledRBush();return e.components?this.createIndexComponentsThread(n,t,e.components.map((e=>new Uint32Array(e)))):this.createIndexAllThread(n,t)}createIndexAllThread(e,t){const n=new Array(t.length/9);let r=0;for(let e=0;e<t.length;e+=9)n[r++]=c(t,e+0,e+3,e+6);return e.load(n),{result:e.toJSON()}}createIndexComponentsThread(e,t,n){let r=0;for(const e of n)r+=e.length/3;const o=new Array(r);let a=0;for(const e of n)for(let n=0;n<e.length;n+=3)o[a++]=c(t,3*e[n+0],3*e[n+1],3*e[n+2]);return e.load(o),{result:e.toJSON()}}createMeshData(e){const t=e.vertexAttributes.position.buffer;return!e.components||e.components.some((e=>!e.faces))?{position:t}:{position:t,components:e.components.map((e=>e.faces))}}createPooledRBush(){return new a.a(9,Object(r.a)("csp-restrictions")?e=>e:[".minX",".minY",".maxX",".maxY"])}}function c(e,t,n,r){return{minX:Math.min(e[t+0],e[n+0],e[r+0]),maxX:Math.max(e[t+0],e[n+0],e[r+0]),minY:Math.min(e[t+1],e[n+1],e[r+1]),maxY:Math.max(e[t+1],e[n+1],e[r+1]),p0:[e[t+0],e[t+1],e[t+2]],p1:[e[n+0],e[n+1],e[n+2]],p2:[e[r+0],e[r+1],e[r+2]]}}t.default=s}}]);