(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{277:function(e,t,i){"use strict";i.r(t);var s=i(0),a=(i(1),i(54)),r=i(138),l=i(35),n=i(19),h=i(335),o=i(356),c=i(364),u=i(392);i(20),i(9),i(3),i(6),i(4),i(13),i(52),i(43),i(5),i(72),i(2),i(40),i(15),i(75),i(10),i(27),i(14),i(16),i(51),i(82),i(89),i(53),i(12),i(44),i(106),i(63),i(55),i(119),i(17),i(120),i(48),i(83),i(115),i(47),i(103),i(32),i(57),i(23),i(70),i(21),i(62),i(26),i(24),i(85),i(109),i(49),i(111),i(71),i(104),i(112),i(108),i(58),i(105),i(110),i(107),i(56),i(116),i(36),i(64),i(42),i(113),i(41),i(121),i(117),i(114),i(66),i(31),i(118),i(123),i(8),i(73),i(84),i(65),i(74),i(90),i(11),i(7),i(67),i(86),i(137),i(122),i(317),i(318),i(310),i(372),i(313),i(312),i(325),i(314),i(316),i(323),i(319),i(326),i(321),i(320),i(332),i(345);const p=e=>{let t=class extends e{async fetchPopupFeatures(e,t){const{layer:i}=this;if(!e)return Promise.reject(new s.s("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i}));if("tile"!==i.type)return Promise.reject(new s.s("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:i.type}));const a=this.get("view.scale"),r=i.allSublayers.toArray().filter((e=>{const t=0===e.minScale||a<=e.minScale,i=0===e.maxScale||a>=e.maxScale;return e.popupTemplate&&e.popupEnabled&&e.visible&&t&&i}));return Object(s.E)(r.map((async i=>{const a=i.createQuery(),r=Object(s.P)(t)?t.event:null,l=Object(c.a)({renderer:i.renderer,event:r});return a.geometry=this.createFetchPopupFeaturesQueryGeometry(e,l),a.outFields=await i.popupTemplate.getRequiredFields(),(await i.queryFeatures(a)).features}))).then((e=>[].concat(...e.map((e=>e.value)).filter(Boolean))))}};return Object(s.e)([Object(s.y)()],t.prototype,"layer",void 0),t=Object(s.e)([Object(s.i)("esri.layers.mixins.TileLayerView")],t),t},f=s.n.getLogger("esri.views.2d.layers.TileLayerView2D"),y=[0,0];let m=class extends(p(Object(r.m)(Object(u.a)(Object(h.b)(h.a))))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}initialize(){const e=this.layer.tileInfo,t=e&&e.spatialReference;let i;t||(i=new s.s("layerview:tiling-information-missing","The layer doesn't provide tiling information",{layer:this.layer})),t.equals(this.view.spatialReference)||(i=new s.s("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer})),this.watch("resampling",(()=>{this.refresh()})),i&&this.addResolvingPromise(Promise.reject(i))}get resampling(){return!("resampling"in this.layer)||!1!==this.layer.resampling}hitTest(){return null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this.notifyChange("updating")}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null;this._tileInfoView=new l.b(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new n.l({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new n.g({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.requestUpdate(),this.container.requestRender(),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQueryGeometry(e,t){return Object(o.a)(e,t,this.view)}async doRefresh(){this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>this._enqueueTileFetch(e))),this.notifyChange("updating"))}isUpdating(){var e;return(null==(e=this._fetchQueue)?void 0:e.length)>0}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(y,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e,t){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,r=!Object(s.J)(t)&&t.signal;if(!i)try{return await this._fetchImage(e,r)}catch(e){if(!Object(s.B)(e)&&!this.resampling)return this._createBlankImage();throw e}const l=new a.a(0,0,0,0);let n;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,l,{signal:r}),l.level!==e.level&&!this.resampling)return this._createBlankImage();n=await this._fetchImage(l,r)}catch(t){if(Object(s.B)(t))throw t;n=await this._fetchImage(e,r)}const{level:h,row:o,col:c}=l;return this.resampling&&h!==e.level?this._resampleImage(n,h,o,c,e.level,e.row,e.col):n}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(e){Object(s.B)(e)||f.error(e)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchTile(e.level,e.row,e.col,{timestamp:this.refreshTimestamp,signal:t})}_resampleImage(e,t,i,s,a,r,l){const n=this._tileInfoView.tileInfo.size,h=this._tileInfoView.getTileResolution(t),o=this._tileInfoView.getTileResolution(a);let c=this._tileInfoView.getLODInfoAt(a);const u=c.getXForColumn(l),p=c.getYForRow(r);c=this._tileInfoView.getLODInfoAt(t);const f=c.getXForColumn(s),y=c.getYForRow(i),m=Math.round((u-f)/h),w=Math.round(-(p-y)/h),g=Math.round(n[0]*(o/h)),d=Math.round(n[1]*(o/h)),_=this._createBlankImage();return _.getContext("2d").drawImage(e,m,w,g,d,0,0,n[0],n[1]),_}_createBlankImage(){const e=this._tileInfoView.tileInfo.size,t=document.createElement("canvas");return[t.width,t.height]=e,t}};Object(s.e)([Object(s.y)()],m.prototype,"resampling",null),m=Object(s.e)([Object(s.i)("esri.views.2d.layers.TileLayerView2D")],m);var w=m;t.default=w}}]);