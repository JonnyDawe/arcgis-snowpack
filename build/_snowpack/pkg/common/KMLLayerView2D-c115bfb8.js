import { w as u, L, C as U, M as M$1, ah as x, ai as g, P as r, J as t$1, A as k, aF as t$2, c0 as b, bU as C$1, e, y, i as i$1 } from './Identifiable-c8406192.js';
import './config-b3bf08ce.js';
import { D, H } from './projection-1aa78979.js';
import { r as r$1 } from './Task-21d7c7ba.js';
import { a } from './GraphicsCollection-afd60f67.js';
import { b as b$1, g as g$1, d } from './kmlUtils-2cec727d.js';
import { l, d as d$1 } from './LayerView2D-57cb193a.js';
import { e as et } from './BaseGraphicContainer-3565dd41.js';
import { i } from './GraphicContainer-e43c3754.js';
import { _ } from './Bitmap-a7ead8ae.js';
import { t } from './BitmapContainer-fdcd30a9.js';
import './vec3f64-a6795633.js';
import './vec3-ae5ae182.js';
import './unitUtils-1b0a3531.js';
import './mat4-3619c4da.js';
import './Graphic-9f79c7db.js';
import './jsonUtils-d762dc00.js';
import './PopupTemplate-77ad81c4.js';
import './fieldUtils-a9f71c96.js';
import './symbols-a702d148.js';
import './persistableUrlUtils-b4be11a9.js';
import './uid-7967dd4d.js';
import './jsonUtils-abe1bd07.js';
import './UniqueValueRenderer-6eda9445.js';
import './ColorStop-27e1a5ee.js';
import './styleUtils-062f64a7.js';
import './sizeVariableUtils-33233df0.js';
import './visualVariableUtils-66f67c57.js';
import './compilerUtils-006be997.js';
import './lengthUtils-cb1a7b62.js';
import './diffUtils-e1cd943c.js';
import './LRUCache-9b61e325.js';
import './MemCache-1f56f5a2.js';
import './FeatureSet-ceb33ccf.js';
import './Field-e6fe6b12.js';
import './fieldType-769fe7ff.js';
import './aaBoundingBox-5c7868ad.js';
import './HandleOwner-2c2dff93.js';
import './watchUtils-880dbce7.js';
import './Container-0dd65e2f.js';
import './mat4f32-575d0c83.js';
import './_commonjsHelpers-268aa74f.js';
import './aaBoundingRect-a3d841c1.js';
import './defaults-91b05a2c.js';
import './defaultsJSON-375e89aa.js';
import './definitions-681c54ec.js';
import './capabilities-6619b906.js';
import './normalizeUtils-2bbe7974.js';
import './schemaUtils-da3a1cd7.js';
import './MD5-944ef260.js';
import './Utils-0d5f7d82.js';
import './FramebufferObject-903a1e6f.js';
import './MaterialKey-1dd9041e.js';
import './visualVariablesUtils-c37b8ac9.js';
import './vec2-f6c2e17c.js';
import './TileStrategy-ff1490fc.js';
import './TileInfoView-40300351.js';
import './TileKey-482fe256.js';
import './Rect-7bb5ea0f.js';
import './BidiEngine-aa559a1b.js';
import './WGLMeshFactory-30b8f0b9.js';
import './ComputedAttributeStorage-2aa309af.js';
import './Query-448be42b.js';
import './TimeExtent-155cb8a4.js';
import './quickselect-558f6195.js';
import './featureConversionUtils-6830a580.js';
import './OptimizedFeatureSet-d6270f6b.js';
import './FeatureSetReader-a4e80fde.js';
import './centroid-a0ceb19b.js';
import './FieldsIndex-d0d5f38b.js';
import './visualVariablesUtils-4c7ed7ac.js';
import './tileUtils-aab0f1e2.js';
import './TurboLine-5afa5e0b.js';
import './GeometryUtils-04b09680.js';
import './quantizationUtils-a3fdf3fa.js';
import './json-79b5edc1.js';
import './VertexArrayObject-21aea4dd.js';
import './FeatureContainer-c35a73f4.js';
import './TileContainer-21a4a969.js';
import './mat3-425ec876.js';
import './MapView-287c7d57.js';
import './CollectionFlattener-5ff807fc.js';
import './workers-31c2755c.js';
import './Widget-2f53b352.js';
import './GoTo-21ecf3ed.js';
import './widget-0e54f9c7.js';
import './RelationshipQuery-1cbf03e3.js';
import './QueryTask-60c0f90b.js';
import './query-95e8633c.js';
import './queryZScale-3f81db56.js';
import './zscale-209a474d.js';
import './pbfQueryUtils-fdd38078.js';
import './pbf-02a10316.js';
import './FeatureLayer-346f29ad.js';
import './Layer-d22ad00d.js';
import './MultiOriginJSONSupport-29c9a66e.js';
import './arcgisLayerUrl-d85d6d65.js';
import './HeightModelInfo-f665a73c.js';
import './OperationalLayer-d48a5914.js';
import './ArcGISService-7a5cc3ad.js';
import './BlendLayer-f2f3b180.js';
import './FeatureType-a62beea1.js';
import './PortalLayer-8f26d9e1.js';
import './RefreshableLayer-cf71b273.js';
import './ScaleRangeLayer-8feef0dd.js';
import './TimeInfo-190b35f7.js';
import './TemporalLayer-c333d449.js';
import './labelingInfo-21494a5d.js';
import './LabelClass-c61f8b70.js';
import './labelUtils-5176895f.js';
import './fieldProperties-b389086f.js';
import './styleUtils-f2703dfb.js';
import './popupUtils-5e9c2795.js';
import './utils-68b4615c.js';
import './ItemCache-717f7581.js';
import './mathUtils-25e61b42.js';
import './TileInfo-f085f660.js';
import './Map-3c24a571.js';
import './TablesMixin-d10799e4.js';
import './unitBezier-6bff3f6f.js';
import './WGLContainer-c91d6469.js';
import './vec4f32-27a1bf8c.js';
import './ShaderCompiler-c2405d4f.js';
import './earcut-d6248195.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
class j{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[];}}let C=class extends(l(d$1)){constructor(){super(...arguments),this._handles=new u,this._bitmapIndex=new Map,this._mapImageContainer=new t,this._kmlVisualData=new j,this.allVisiblePoints=new a,this.allVisiblePolylines=new a,this.allVisiblePolygons=new a,this.allVisibleMapImages=new L;}hitTest(e,i){if(this.suspended||!this._pointsView&&!this._polylinesView&&!this._polygonsView)return Promise.resolve(null);const t=[this._pointsView.hitTest(e,i),this._polylinesView.hitTest(e,i),this._polygonsView.hitTest(e,i)];return Promise.all(t).then((e=>e.filter((e=>(e&&(e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e);}attach(){this._handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)));}))]),this.container.addChild(this._mapImageContainer),this._polygonsView=new et({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new et({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new et({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new i(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",(e=>{for(const[i,t]of this._kmlVisualData.allSublayers)t.visibility=0;for(const i of e){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1);}this._refreshCollections();})),this._fetchingPromise=this._fetchService().then((()=>{this._fetchingPromise=null,this.notifyChange("updating");}));}detach(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null);}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange();}moveEnd(){}isUpdating(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&U(e.href,{responseType:"image"}).then((({data:i})=>{let t=M$1.fromJSON(e.extent);x(t,this.view.spatialReference)&&(t=g(t,this.view.spatialReference));const s=new _(i,"standard");s.x=t.xmin,s.y=t.ymax,s.resolution=t.width/i.naturalWidth,s.rotation=e.rotation,this._mapImageContainer.addChild(s),this._bitmapIndex.set(e,s);}));}async _getViewDependentUrl(e,s){const{viewFormat:a,viewBoundScale:n,httpQuery:h}=e;if(r(a)){if(t$1(s))throw new Error("Loading this network link requires a view state.");let m;if(await D(),r(n)&&1!==n){const e=new M$1(s.extent);e.expand(n),m=e;}else m=s.extent;m=H(m,k.WGS84);const d=H(m,k.WebMercator),y=m.xmin,_=m.xmax,V=m.ymin,b$1=m.ymax,f=s.size[0]*s.pixelRatio,v=s.size[1]*s.pixelRatio,S=Math.max(d.width,d.height),I={"[bboxWest]":y.toString(),"[bboxEast]":_.toString(),"[bboxSouth]":V.toString(),"[bboxNorth]":b$1.toString(),"[lookatLon]":m.center.x.toString(),"[lookatLat]":m.center.y.toString(),"[lookatRange]":S.toString(),"[lookatTilt]":"0","[lookatHeading]":s.rotation.toString(),"[lookatTerrainLon]":m.center.x.toString(),"[lookatTerrainLat]":m.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":m.center.x.toString(),"[cameraLat]":m.center.y.toString(),"[cameraAlt]":S.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":f.toString(),"[vertPixels]":v.toString(),"[terrainEnabled]":"0","[clientVersion]":t$2,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},x=e=>{for(const i in e)for(const t in I)e[i]=e[i].replace(t,I[t]);},P=b(a);x(P);let k$1={};r(h)&&(k$1=b(h),x(k$1));const j=r$1(e.href);j.query={...j.query,...P,...k$1};return `${j.path}?${C$1(P)}`}return e.href}async _fetchService(){const e=new j;await this._loadVisualData(this.layer.url,e),this._kmlVisualData=e,this._refreshCollections();}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)));}_isSublayerVisible(e){const i=this._kmlVisualData.allSublayers.get(e);return !!i.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))}_loadVisualData(e,i){return this._fetchParsedKML(e).then((async e=>{for(const t of e.sublayers){i.allSublayers.set(t.id,t);const e=t.points?await b$1(t.points):[],s=t.polylines?await b$1(t.polylines):[],a=t.polygons?await b$1(t.polygons):[],o=t.mapImages||[];if(i.allPoints.push(...e.map((e=>({item:e,sublayerId:t.id})))),i.allPolylines.push(...s.map((e=>({item:e,sublayerId:t.id})))),i.allPolygons.push(...a.map((e=>({item:e,sublayerId:t.id})))),i.allMapImages.push(...o.map((e=>({item:e,sublayerId:t.id})))),t.networkLink){const e=await this._getViewDependentUrl(t.networkLink,this.view.state);await this._loadVisualData(e,i);}}}))}_fetchParsedKML(e){return g$1(e,this.view.spatialReference,this.layer.refreshInterval).then((e=>d(e.data)))}_removeMapImage(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e));}};e([y()],C.prototype,"_pointsView",void 0),e([y()],C.prototype,"_polylinesView",void 0),e([y()],C.prototype,"_polygonsView",void 0),e([y()],C.prototype,"_fetchingPromise",void 0),e([y()],C.prototype,"updating",void 0),C=e([i$1("esri.views.2d.layers.KMLLayerView2D")],C);var M=C;

export default M;
