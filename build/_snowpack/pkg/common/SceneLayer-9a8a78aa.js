import { e, y, i, a, n, P as r, bR as w, J as t$1, s as s$4, aX as D, C as U, bB as e$2, B as g, a1 as e$3 } from './Identifiable-c8406192.js';
import './config-b3bf08ce.js';
import { b as c } from './fieldUtils-a9f71c96.js';
import { M } from './PopupTemplate-77ad81c4.js';
import { b } from './Layer-d22ad00d.js';
import { l as l$1 } from './MultiOriginJSONSupport-29c9a66e.js';
import { i as i$1 } from './watchUtils-880dbce7.js';
import { l, m as m$1, p as p$4, d, g as g$1, c as c$2, a as l$4 } from './OperationalLayer-d48a5914.js';
import './UniqueValueRenderer-6eda9445.js';
import { n as n$1 } from './jsonUtils-abe1bd07.js';
import { e as e$1 } from './FieldsIndex-d0d5f38b.js';
import { p as p$1 } from './ArcGISService-7a5cc3ad.js';
import { u } from './PortalLayer-8f26d9e1.js';
import { s as s$1 } from './ScaleRangeLayer-8feef0dd.js';
import { p as p$2, a as c$1, r as r$1 } from './labelingInfo-21494a5d.js';
import { E } from './LabelClass-c61f8b70.js';
import { l as l$5 } from './fieldProperties-b389086f.js';
import { p as p$3 } from './FeatureLayer-346f29ad.js';
import { t } from './styleUtils-f2703dfb.js';
import { a as a$1 } from './popupUtils-5e9c2795.js';
import { R as R$1 } from './Query-448be42b.js';
import { s as s$3, l as l$2 } from './FetchAssociatedFeatureLayer-5b2ea6a3.js';
import { s as s$2, l as l$3, u as u$1, m } from './I3SLayerDefinitions-e96db853.js';
import { R } from './SceneService-e53eb3f3.js';
import './persistableUrlUtils-b4be11a9.js';
import './TimeExtent-155cb8a4.js';
import './lengthUtils-cb1a7b62.js';
import './unitUtils-1b0a3531.js';
import './symbols-a702d148.js';
import './ColorStop-27e1a5ee.js';
import './styleUtils-062f64a7.js';
import './sizeVariableUtils-33233df0.js';
import './visualVariableUtils-66f67c57.js';
import './compilerUtils-006be997.js';
import './Graphic-9f79c7db.js';
import './jsonUtils-d762dc00.js';
import './uid-7967dd4d.js';
import './diffUtils-e1cd943c.js';
import './LRUCache-9b61e325.js';
import './MemCache-1f56f5a2.js';
import './arcgisLayerUrl-d85d6d65.js';
import './labelUtils-5176895f.js';
import './defaults-91b05a2c.js';
import './defaultsJSON-375e89aa.js';
import './Field-e6fe6b12.js';
import './fieldType-769fe7ff.js';
import './HeightModelInfo-f665a73c.js';
import './FeatureSet-ceb33ccf.js';
import './workers-31c2755c.js';
import './zscale-209a474d.js';
import './queryZScale-3f81db56.js';
import './BlendLayer-f2f3b180.js';
import './FeatureType-a62beea1.js';
import './RefreshableLayer-cf71b273.js';
import './TimeInfo-190b35f7.js';
import './TemporalLayer-c333d449.js';
import './RelationshipQuery-1cbf03e3.js';
import './resourceUtils-9c620d32.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
let s=class extends a{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo";}};e([y({type:String,json:{read:!0,write:!0}})],s.prototype,"name",void 0),e([y({type:String,json:{read:!0,write:!0}})],s.prototype,"field",void 0),e([y({type:[Number],json:{read:!0,write:!0}})],s.prototype,"currentRangeExtent",void 0),e([y({type:[Number],json:{read:!0,write:!0}})],s.prototype,"fullRangeExtent",void 0),e([y({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],s.prototype,"type",void 0),s=e([i("esri.layers.support.RangeInfo")],s);var p=s;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const z=["3DObject","Point"],Z=n.getLogger("esri.layers.SceneLayer"),B=l$5();let J=class extends(R(p$1(l(u(s$1(l$1(b))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.editingEnabled=!0,this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0;}normalizeCtorArgs(e,t){return "string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e){const t=this.getField(e);return t&&t.domain?t.domain:null}get fieldsIndex(){return new e$1(this.fields)}readNodePages(e,t,r){return "Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:s$2.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo();}get geometryType(){return X[this.profile]||"mesh"}set renderer(e){c(e,this.fields),this._set("renderer",e);}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=r(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:s$3,{query:r$1,editing:{supportsGlobalId:o,supportsRollbackOnFailure:s,supportsUploadWithItemId:i},data:{supportsZ:a,supportsM:n,isVersioned:p},operations:{supportsEditing:l,supportsUpdate:d}}=e,y=e.operations.supportsChangeTracking;return {query:r$1,editing:{supportsGlobalId:o,supportsRollbackOnFailure:s,supportsGeometryUpdate:!1,supportsUploadWithItemId:i},data:{supportsZ:a,supportsM:n,isVersioned:p},operations:{supportsEditing:l&&y,supportsAdd:!1,supportsDelete:!1,supportsUpdate:d&&y}}}get defaultPopupTemplate(){return r(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return !e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return !e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return r(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&H[r]?H[r]:(Z.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const r$1=r(e)?e.signal:null,o=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(w).then((()=>this._fetchService(r$1))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,r$1),this._setAssociatedFeatureLayer(r$1)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>t(this,{origin:"service"},r$1))).then((()=>c(this.renderer,this.fields)));return this.addResolvingPromise(o),Promise.resolve(this)}createQuery(){const e=new R$1;return "mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(Z.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return a$1(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return r(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),t$1(this.associatedLayer))throw new s$4("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load();}catch(e){throw new s$4("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new s$4("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new s$4("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const o of this.statisticsInfo)if(o.name===r.name){const e=D(this.parsedUrl.path,o.href);return U(e,{query:{f:"json"},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new s$4("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const o=await import('./editingSupport-e1c078d3.js');if(await this.load(),t$1(this.associatedLayer))throw new s$4(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),o.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===z.indexOf(e.layerType))throw new s$4("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new s$4("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new s$4("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});function t(e,t){let r=!1,o=!1;if(null==e)r=!0,o=!0;else {const s=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,o=s;break;case"vertex-reference-frame":r=!0,o=!s;break;default:r=!1;}}if(!r)throw new s$4("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!o)throw new s$4("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference);}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else {if("mesh-pyramids"!==this.profile)throw new s$4("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject");}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const r$1=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),o=!!(r(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),s={supportsLabelingInfo:r$1,supportsRenderer:r$1,supportsPopupTemplate:r$1||o,supportsLayerQuery:o};this._fieldUsageInfo[e.name]=s;}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides();}_applyAssociatedLayerFieldsOverrides(){if(t$1(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()));}e&&this._set("fields",e);}_applyAssociatedLayerPopupOverrides(){if(t$1(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=e$2(this);for(let r=0;r<e.length;r++){const o=e[r];this._buddyIsMoreImportant(o)&&(t.setDefaultOrigin(this.associatedLayer.originOf(o)),t.set(o,this.associatedLayer[o]),t.setDefaultOrigin("user"));}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new l$2(this.parsedUrl,this.portalItem,e);try{this.associatedLayer=await t.fetch();}catch(r){g(r)||this._logWarningOnPopupEnabled();}}_logWarningOnPopupEnabled(){i$1(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?Z.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):Z.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`);}));}_buddyIsMoreImportant(e){if(t$1(this.associatedLayer))return !1;const t=this.originIdOf(e),o=this.associatedLayer.originIdOf(e);return null!=o&&o<=2?null==t||t<2:null!=o&&o<=3&&(null==t||t<3)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&Z.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&Z.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"));}};e([y({types:{key:"type",base:p$2,typeMap:{selection:c$1}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],J.prototype,"featureReduction",void 0),e([y({type:[p],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],J.prototype,"rangeInfos",void 0),e([y({json:{read:!1}})],J.prototype,"associatedLayer",void 0),e([y({type:["show","hide"]})],J.prototype,"listMode",void 0),e([y({type:["ArcGISSceneServiceLayer"]})],J.prototype,"operationalLayerType",void 0),e([y({json:{read:!1},readOnly:!0})],J.prototype,"type",void 0),e([y({...B.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],J.prototype,"fields",void 0),e([y({readOnly:!0})],J.prototype,"fieldsIndex",null),e([y({type:p$3,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],J.prototype,"floorInfo",void 0),e([y(B.outFields)],J.prototype,"outFields",void 0),e([y({type:s$2,readOnly:!0,json:{read:!1}})],J.prototype,"nodePages",void 0),e([e$3("service","nodePages",["nodePages","pointNodePages"])],J.prototype,"readNodePages",null),e([y({type:[l$3],readOnly:!0})],J.prototype,"materialDefinitions",void 0),e([y({type:[u$1],readOnly:!0})],J.prototype,"textureSetDefinitions",void 0),e([y({type:[m],readOnly:!0})],J.prototype,"geometryDefinitions",void 0),e([y({readOnly:!0})],J.prototype,"serviceUpdateTimeStamp",void 0),e([y({readOnly:!0})],J.prototype,"attributeStorageInfo",void 0),e([y({readOnly:!0})],J.prototype,"statisticsInfo",void 0),e([y({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],J.prototype,"definitionExpression",void 0),e([y({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],J.prototype,"path",void 0),e([y(m$1)],J.prototype,"elevationInfo",null),e([y({type:String})],J.prototype,"geometryType",null),e([y(p$4)],J.prototype,"labelsVisible",void 0),e([y({type:[E],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:r$1},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:r$1},write:!0}})],J.prototype,"labelingInfo",void 0),e([y(d)],J.prototype,"legendEnabled",void 0),e([y(g$1)],J.prototype,"opacity",void 0),e([y({types:n$1,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],J.prototype,"renderer",null),e([y({json:{read:!1}})],J.prototype,"cachedDrawingInfo",void 0),e([e$3("service","cachedDrawingInfo")],J.prototype,"readCachedDrawingInfo",null),e([y({readOnly:!0,json:{read:!1}})],J.prototype,"capabilities",null),e([y({type:Boolean,json:{read:!1}})],J.prototype,"editingEnabled",void 0),e([y(c$2)],J.prototype,"popupEnabled",void 0),e([y({type:M,json:{name:"popupInfo",write:!0}})],J.prototype,"popupTemplate",void 0),e([y({readOnly:!0,json:{read:!1}})],J.prototype,"defaultPopupTemplate",null),e([y({type:String,json:{read:!1}})],J.prototype,"objectIdField",void 0),e([e$3("service","objectIdField",["objectIdField","fields"])],J.prototype,"readObjectIdField",null),e([y({type:String,json:{read:!1}})],J.prototype,"globalIdField",void 0),e([e$3("service","globalIdField",["globalIdField","fields"])],J.prototype,"readGlobalIdField",null),e([y({readOnly:!0,type:String,json:{read:!1}})],J.prototype,"displayField",null),e([y({type:String,json:{read:!1}})],J.prototype,"profile",void 0),e([e$3("service","profile",["store.profile"])],J.prototype,"readProfile",null),e([y({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],J.prototype,"normalReferenceFrame",void 0),e([y(l$4)],J.prototype,"screenSizePerspectiveEnabled",void 0),J=e([i("esri.layers.SceneLayer")],J);const H={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},X={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};var Y=J;

export default Y;
