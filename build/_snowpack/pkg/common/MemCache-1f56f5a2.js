import { aC as n } from './Identifiable-c8406192.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const e=-3;class s{constructor(t,e,s){this._namespace=t,this._storage=e,this._removeFunc=!1,this._hit=0,this._miss=0,this._storage.register(this),this._namespace+=":",s&&(this._storage.registerRemoveFunc(this._namespace,s),this._removeFunc=!0);}destroy(){this._storage.clear(this._namespace),this._removeFunc&&this._storage.deregisterRemoveFunc(this._namespace),this._storage.deregister(this),this._storage=null;}get namespace(){return this._namespace.slice(0,-1)}get hitRate(){return this._hit/(this._hit+this._miss)}get size(){return this._storage.size}get maxSize(){return this._storage.maxSize}resetHitRate(){this._hit=this._miss=0;}put(t,e,s,i=0){this._storage.put(this._namespace+t,e,s,i);}get(t){const e=this._storage.get(this._namespace+t);return void 0===e?++this._miss:++this._hit,e}pop(t){const e=this._storage.pop(this._namespace+t);return void 0===e?++this._miss:++this._hit,e}updateSize(t,e,s){this._storage.updateSize(this._namespace+t,e,s);}clear(){this._storage.clear(this._namespace);}clearAll(){this._storage.clearAll();}getStats(){return this._storage.getStats()}resetStats(){this._storage.resetStats();}}class i{constructor(e=10485760){this._maxSize=e,this._db=new Map,this._size=0,this._hit=0,this._miss=0,this._removeFuncs=new n,this._users=new n;}destroy(){this.clearAll(),this._removeFuncs.clear(),this._users.clear(),this._db=null;}register(t){this._users.push(t);}deregister(t){this._users.removeUnordered(t);}registerRemoveFunc(t,e){this._removeFuncs.push([t,e]);}deregisterRemoveFunc(t){this._removeFuncs.filterInPlace((e=>e[0]!==t));}get size(){return this._size}get maxSize(){return this._maxSize}set maxSize(t){this._maxSize=Math.max(t,0),this._checkSizeLimit();}put(t,s,i,h){const r=this._db.get(t);if(r&&(this._size-=r.size,this._db.delete(t),r.entry!==s&&this._notifyRemoved(t,r.entry)),i>this._maxSize)return void this._notifyRemoved(t,s);if(void 0===s)return void console.warn("Refusing to cache undefined entry ");if(!i||i<0)return void console.warn("Refusing to cache entry with invalid size "+i);const _=1+Math.max(h,e)-e;this._db.set(t,{entry:s,size:i,lifetime:_,lives:_}),this._size+=i,this._checkSizeLimit();}updateSize(t,e,s){const i=this._db.get(t);if(i&&i.entry===e){if(this._size-=i.size,s>this._maxSize)return this._db.delete(t),void this._notifyRemoved(t,e);i.size=s,this._size+=s,this._checkSizeLimit();}}pop(t){const e=this._db.get(t);if(e)return this._size-=e.size,this._db.delete(t),++this._hit,e.entry;++this._miss;}get(t){const e=this._db.get(t);if(void 0!==e)return this._db.delete(t),e.lives=e.lifetime,this._db.set(t,e),++this._hit,e.entry;++this._miss;}getStats(){const t={Size:Math.round(this._size/1048576)+"/"+Math.round(this._maxSize/1048576)+"MB","Hit rate":Math.round(100*this._getHitRate())+"%",Entries:this._db.size.toString()},s={},i=new Array;this._db.forEach(((t,e)=>{const h=t.lifetime;i[h]=(i[h]||0)+t.size,this._users.forAll((i=>{const h=i.namespace;if(e.startsWith(h)){const e=s[h]||0;s[h]=e+t.size;}}));}));const h={};this._users.forAll((t=>{const e=t.namespace;if(!isNaN(t.hitRate)&&t.hitRate>0){const i=s[e]||0;s[e]=i,h[e]=Math.round(100*t.hitRate)+"%";}else h[e]="0%";}));const r=Object.keys(s);r.forEach((t=>s[t]=s[t]/this._size*100)),r.sort(((t,e)=>s[e]-s[t])),r.forEach((e=>t[e]=Math.round(s[e])+"% / "+h[e]));for(let _=i.length-1;_>=0;--_){const s=i[_];s&&(t["Priority "+(_+e-1)]=Math.round(s/this.size*100)+"%");}return t}resetStats(){this._hit=this._miss=0,this._users.forAll((t=>t.resetHitRate()));}clear(t){this._db.forEach(((e,s)=>{s.startsWith(t)&&(this._size-=e.size,this._db.delete(s),this._notifyRemoved(s,e.entry));}));}clearAll(){this._db.forEach(((t,e)=>this._notifyRemoved(e,t.entry))),this._size=0,this._db.clear();}_getHitRate(){return this._hit/(this._hit+this._miss)}_notifyRemoved(t,e){this._removeFuncs.forAll((s=>{t.startsWith(s[0])&&s[1](e);}));}_checkSizeLimit(){if(!(this._size<=this._maxSize))for(const[t,e]of this._db)if(this._db.delete(t),e.lives<=1?(this._size-=e.size,this._notifyRemoved(t,e.entry)):(--e.lives,this._db.set(t,e)),this._size<=.9*this.maxSize)return}}

export { i, s };
