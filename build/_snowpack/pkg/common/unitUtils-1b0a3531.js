import './config-b3bf08ce.js';
import { A as k$1, ba as t, bb as e, am as s, bc as k$2, bd as P, be as G$2, bf as w, aL as o, bg as r, bh as o$1 } from './Identifiable-c8406192.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function T$1(n){return new k$1({wkt:`GEOCCS["Spherical geocentric",\n    DATUM["Not specified",\n      SPHEROID["Sphere",${n.radius},0]],\n    PRIMEM["Greenwich",0.0,\n      AUTHORITY["EPSG","8901"]],\n    UNIT["m",1.0],\n    AXIS["Geocentric X",OTHER],\n    AXIS["Geocentric Y",EAST],\n    AXIS["Geocentric Z",NORTH]\n  ]`})}const G$1=T$1(s),I$1=T$1(t),E=T$1(e),R$1=new k$1({wkt:`GEOCCS["WGS 84",\n  DATUM["WGS_1984",\n    SPHEROID["WGS 84",${s.radius},298.257223563,\n      AUTHORITY["EPSG","7030"]],\n    AUTHORITY["EPSG","6326"]],\n  PRIMEM["Greenwich",0,\n    AUTHORITY["EPSG","8901"]],\n  UNIT["m",1.0,\n    AUTHORITY["EPSG","9001"]],\n  AXIS["Geocentric X",OTHER],\n  AXIS["Geocentric Y",OTHER],\n  AXIS["Geocentric Z",NORTH],\n  AUTHORITY["EPSG","4978"]\n]`});function p$1(r){return r&&(k$2(r)||r===I$1)?t:r&&(P(r)||r===E)?e:s}function u(n){return G$2(n)?t:w(n)?e:s}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const l=39.37,m=s.radius*Math.PI/200,f=/UNIT\[([^\]]+)\]\]$/i,d=r,U=/UNIT\[([^\]]+)\]/i,q=new Set([4261,4305,4807,4810,4811,4812,4816,4819,4821,4901,4902,37225,104139,104140]),p=o()({meter:"meters",foot:"feet",foot_us:"us-feet",foot_clarke:"clarke-feet",yard_clarke:"clarke-yards",link_clarke:"clarke-links",yard_sears:"sears-yards",foot_sears:"sears-feet",chain_sears:"sears-chains",chain_benoit_1895_b:"benoit-1895-b-chains",yard_indian:"indian-yards",yard_indian_1937:"indian-1937-yards",foot_gold_coast:"gold-coast-feet",chain_sears_1922_truncated:"sears-1922-truncated-chains","50_kilometers":"50-kilometers","150_kilometers":"150-kilometers"}),B=e=>e*e,h=e=>e*e*e,k={length:{baseUnit:"meters",units:{millimeters:{inBaseUnits:.001},centimeters:{inBaseUnits:.01},decimeters:{inBaseUnits:.1},meters:{inBaseUnits:1},kilometers:{inBaseUnits:1e3},inches:{inBaseUnits:.0254},feet:{inBaseUnits:.3048},yards:{inBaseUnits:.9144},miles:{inBaseUnits:1609.344},"nautical-miles":{inBaseUnits:1852},"us-feet":{inBaseUnits:1200/3937}}},area:{baseUnit:"square-meters",units:{"square-millimeters":{inBaseUnits:B(.001)},"square-centimeters":{inBaseUnits:B(.01)},"square-decimeters":{inBaseUnits:B(.1)},"square-meters":{inBaseUnits:1},"square-kilometers":{inBaseUnits:B(1e3)},"square-inches":{inBaseUnits:B(.0254)},"square-feet":{inBaseUnits:B(.3048)},"square-yards":{inBaseUnits:B(.9144)},"square-miles":{inBaseUnits:B(1609.344)},"square-us-feet":{inBaseUnits:B(1200/3937)},acres:{inBaseUnits:.0015625*B(1609.344)},ares:{inBaseUnits:100},hectares:{inBaseUnits:1e4}}},volume:{baseUnit:"liters",units:{liters:{inBaseUnits:1},"cubic-millimeters":{inBaseUnits:1e3*h(.001)},"cubic-centimeters":{inBaseUnits:1e3*h(.01)},"cubic-decimeters":{inBaseUnits:1e3*h(.1)},"cubic-meters":{inBaseUnits:1e3},"cubic-kilometers":{inBaseUnits:1e3*h(1e3)},"cubic-inches":{inBaseUnits:1e3*h(.0254)},"cubic-feet":{inBaseUnits:1e3*h(.3048)},"cubic-yards":{inBaseUnits:1e3*h(.9144)},"cubic-miles":{inBaseUnits:1e3*h(1609.344)}}},angle:{baseUnit:"radians",units:{radians:{inBaseUnits:1},degrees:{inBaseUnits:Math.PI/180}}}},y=function(){const e={};for(const s in k)for(const r in k[s].units)e[r]=s;return e}();function b(e,s,r){return e*k[r].units[s].inBaseUnits}function _(e,s,r){return e/k[r].units[s].inBaseUnits}function j(e){const s=y[e];if(s)return s;throw new Error("unknown measure")}function C(e,s=null){return s=s||j(e),k[s].baseUnit===e}function I(e,s,r){if(s===r)return e;const t=j(s);if(t!==j(r))throw new Error("incompatible units");const i=C(s,t)?e:b(e,s,t);return C(r,t)?i:_(i,r,t)}function R(e,s,r){return I(e,s,"meters")/(r*Math.PI/180)}function K(e){return p.fromJSON(e.toLowerCase())||null}function T(e){if(e&&"object"==typeof e&&!o$1(e))return 1;const s=G(e);return s>1e5?1:s}function Y(e){return G(e)>=(e instanceof k$1?p$1(e).metersPerDegree:1e5)?"meters":L(e)}function G(e,s$1=s.metersPerDegree){return H(e,!0)||s$1}function H(e$1,s=!1){let r,n,a=null;if(null!=e$1&&("object"==typeof e$1?(r=e$1.wkid,n=e$1.wkt):"number"==typeof e$1?r=e$1:"string"==typeof e$1&&(n=e$1)),r){if(G$2(r))return t.metersPerDegree;if(w(r))return e.metersPerDegree;a=d.values[d[r]],!a&&s&&q.has(r)&&(a=m);}else if(n)if(-1!==n.search(/^PROJCS/i)){const e=f.exec(n);e&&e[1]&&(a=parseFloat(e[1].split(",")[1]));}else if(-1!==n.search(/^GEOCCS/i)){const e=U.exec(n);e&&e[1]&&(a=parseFloat(e[1].split(",")[1]));}return a}function L(e){let s,r,t=null;if(null!=e&&("object"==typeof e?(s=e.wkid,r=e.wkt):"number"==typeof e?s=e:"string"==typeof e&&(r=e)),s)t=d.units[d[s]];else if(r&&-1!==r.search(/^PROJCS/i)){let e=f.exec(r);e&&e[1]&&(e=/[\\"\\']{1}([^\\"\\']+)/.exec(e[1]),t=e&&e[1]);}return t?K(t):null}const $={esriAcres:"acres",esriAres:"ares",esriHectares:"hectares",esriSquareCentimeters:"square-centimeters",esriSquareDecimeters:"square-decimeters",esriSquareFeet:"square-feet",esriSquareInches:"square-inches",esriSquareKilometers:"square-kilometers",esriSquareMeters:"square-meters",esriSquareMiles:"square-miles",esriSquareMillimeters:"square-millimeters",esriSquareUsFeet:"square-us-feet",esriSquareYards:"square-yards"},z={esriCentimeters:"centimeters",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriYards:"yards"},Q=o()($),V=o()(z);o()({...$,...z});

export { E, G, H, I$1 as I, K, L, Q, R$1 as R, T, V, Y, G$1 as a, I as b, R as c, l, u };
