import { n as n$2, e as e$2, y as y$1, M, A as k, i as i$2, aq as S$1, C as U, P as r$2, _ as j$1, a as a$1, aj as n$5, s as s$1, Y as e$3, V as a$2, a8 as v$1, r as r$4, a1 as e$4, o as o$3, E as E$1, ae as m$3, U as U$2, aL as o$5, N as N$1 } from './Identifiable-c8406192.js';
import './config-b3bf08ce.js';
import { o as o$2, M as M$3 } from './PopupTemplate-77ad81c4.js';
import { b as b$2 } from './Layer-d22ad00d.js';
import { l as l$4 } from './MultiOriginJSONSupport-29c9a66e.js';
import { f as f$1, l as l$3, d as d$5 } from './OperationalLayer-d48a5914.js';
import { a as n$3, d as d$1, K, M as M$1, V, j, b as n$4, p as p$4, i as i$4 } from './rasterRendererHelper-4886a122.js';
import { y as y$4 } from './Field-e6fe6b12.js';
import { t as t$3 } from './BlendLayer-f2f3b180.js';
import { u as u$5 } from './PortalLayer-8f26d9e1.js';
import { o as o$6 } from './RefreshableLayer-cf71b273.js';
import { s as s$2 } from './ScaleRangeLayer-8feef0dd.js';
import { a as a$3 } from './popupUtils-5e9c2795.js';
import { y as y$2 } from './arcgisLayerUrl-d85d6d65.js';
import { x as x$4 } from './TileInfo-f085f660.js';
import { N, T as T$1, r as r$3, p as p$3, D, a as r$6, b as b$1, y as y$3, c as n$7, x as x$6, E as E$2 } from './RasterSymbolizer-2f04c461.js';
import g$3 from './FeatureSet-ceb33ccf.js';
import { p as p$2, C, U as U$1, r as r$5, o as o$4, d as d$4, u as u$4 } from './pixelUtils-5dbb0680.js';
import { h as h$1, d as d$2, j as j$2, M as M$2, g as g$2, R as R$1 } from './rasterProjectionHelper-b07e4f07.js';
import { i as i$3, m as m$2, x as x$5, d as d$3, h as h$2 } from './RawBlockCache-6450bf57.js';
import { n as n$6 } from './serviceTileInfoProperty-cc3ceeae.js';
import { j as j$3 } from './TilemapCache-48a08224.js';
import './fieldUtils-a9f71c96.js';
import './persistableUrlUtils-b4be11a9.js';
import './TimeExtent-155cb8a4.js';
import './lengthUtils-cb1a7b62.js';
import './unitUtils-1b0a3531.js';
import './workers-31c2755c.js';
import './watchUtils-880dbce7.js';
import './UniqueValueRenderer-6eda9445.js';
import './symbols-a702d148.js';
import './ColorStop-27e1a5ee.js';
import './styleUtils-062f64a7.js';
import './sizeVariableUtils-33233df0.js';
import './visualVariableUtils-66f67c57.js';
import './compilerUtils-006be997.js';
import './Graphic-9f79c7db.js';
import './jsonUtils-d762dc00.js';
import './uid-7967dd4d.js';
import './diffUtils-e1cd943c.js';
import './normalizeUtils-2bbe7974.js';
import './vectorFieldUtils-e8711a52.js';
import './utils-68b4615c.js';
import './vec3f64-a6795633.js';
import './ItemCache-717f7581.js';
import './MemCache-1f56f5a2.js';
import './fieldType-769fe7ff.js';
import './aaBoundingRect-a3d841c1.js';
import './_commonjsHelpers-268aa74f.js';
import './LercCodec-85783494.js';
import './colorUtils-0d76b80c.js';
import './projection-1aa78979.js';
import './vec3-ae5ae182.js';
import './mat4-3619c4da.js';
import './LRUCache-9b61e325.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const J=n$2.getLogger("esri.layers.mixins.ImageryTileMixin"),x$3=r=>{let x=class extends r{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null;}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e);}set url(e){this._set("url",y$2(e,J));}set renderer(e){this._set("renderer",e),this.updateRenderer();}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=K(this.renderer.toJSON()),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON());}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!(r&&r.pixels&&r.pixels.length>0))return null;let i;this.updateRenderer();const s=this._rasterJobHandler.instance,{bandIds:n}=this;return i=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),i}getTileUrl(e,t,r){return "RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const r=S$1(e);return x$4.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,i={}){if(i.requestAsImageElement){const s=this.getTileUrl(e,t,r);return U(s,{responseType:"image",query:{sliceId:this._sliceId,_ts:i.timestamp},signal:i.signal}).then((e=>e.data))}await this._initJobHandler();const s="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:s,...i};}return this.raster.fetchTile(e,t,r,i)}async fetchPixels(e,t,r,i){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...i};}return this.raster.fetchPixels(e,t,r,i)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++;}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler();}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer();}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new n$4;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer();})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null;}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=M$1(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t);}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(r$2(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],r=[];t.dimensions.forEach((e=>{r.push(new n$3({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}));})),this.multidimensionalDefinition=r;}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition);}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,r;(this.bandIds||(this.bandIds=V(e)),this.renderer)||(this.renderer=j(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(r=t[0])?void 0:r.variableName}));this.symbolizer?(this.symbolizer.rendererJSON=K(this.renderer.toJSON()),this.symbolizer.rasterInfo=e):this.symbolizer=new N({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||J.warn("imagery-tile-mixin","The given renderer is not supported by the layer.");}};return e$2([y$1()],x.prototype,"_cachedRendererJson",void 0),e$2([y$1()],x.prototype,"_sliceId",void 0),e$2([y$1()],x.prototype,"_compatibleFullExtent",void 0),e$2([y$1()],x.prototype,"_rasterJobHandler",void 0),e$2([y$1()],x.prototype,"bandIds",void 0),e$2([y$1()],x.prototype,"copyright",void 0),e$2([y$1({type:M}),o$2("rasterInfo.extent")],x.prototype,"fullExtent",void 0),e$2([y$1()],x.prototype,"interpolation",void 0),e$2([y$1()],x.prototype,"ioConfig",void 0),e$2([y$1({type:[n$3]})],x.prototype,"multidimensionalDefinition",null),e$2([y$1()],x.prototype,"raster",void 0),e$2([y$1({readOnly:!0}),o$2("raster.rasterInfo")],x.prototype,"rasterInfo",void 0),e$2([y$1()],x.prototype,"sourceJSON",void 0),e$2([y$1({type:k}),o$2("rasterInfo.spatialReference")],x.prototype,"spatialReference",void 0),e$2([y$1({type:x$4}),o$2("rasterInfo.storageInfo.tileInfo")],x.prototype,"tileInfo",void 0),e$2([y$1(f$1)],x.prototype,"url",null),e$2([y$1({types:d$1})],x.prototype,"renderer",null),e$2([y$1()],x.prototype,"symbolizer",void 0),x=e$2([i$2("esri.layers.ImageryTileMixin")],x),x};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
let s=class extends a$1{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null;}};e$2([y$1({type:Number,json:{write:!0}})],s.prototype,"blockWidth",void 0),e$2([y$1({type:Number,json:{write:!0}})],s.prototype,"blockHeight",void 0),e$2([y$1({type:String,json:{write:!0}})],s.prototype,"compression",void 0),e$2([y$1({type:j$1,json:{write:!0}})],s.prototype,"origin",void 0),e$2([y$1({type:Number,json:{write:!0}})],s.prototype,"firstPyramidLevel",void 0),e$2([y$1({type:Number,json:{write:!0}})],s.prototype,"maximumPyramidLevel",void 0),e$2([y$1()],s.prototype,"pyramidScalingFactor",void 0),e$2([y$1({type:Number,json:{write:!0}})],s.prototype,"pyramidBlockWidth",void 0),e$2([y$1({type:Number,json:{write:!0}})],s.prototype,"pyramidBlockHeight",void 0),e$2([y$1({type:Boolean,json:{write:!0}})],s.prototype,"isVirtualTileInfo",void 0),e$2([y$1({json:{write:!0}})],s.prototype,"tileInfo",void 0),e$2([y$1()],s.prototype,"blockBoundary",void 0),s=e$2([i$2("esri.layers.support.RasterStorageInfo")],s);var p$1=s;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
let S=class extends(n$5(a$1)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"};}async init(){const e=h$1();this.addResolvingPromise(e),await this.when();}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:x$4.create(),...e.ioConfig}}),e}set url(e){this._set("url",y$2(e,n$2.getLogger(this.declaredClass)));}async open(e){throw new s$1("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,r,o,i={}){var n;const{tileInfo:s}=i,a=s.lodAt(e),l=this.getTileExtent({x:a.resolution,y:a.resolution},r,o,s.origin,s.spatialReference,s.size);return null!=(n=i.multidimensionalDefinition)&&n.length&&r$2(this.rasterInfo.multidimensionalInfo)&&null==i.sliceId&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)||0}),this.fetchPixels(l,s.size[0],s.size[1],i)}async identify(e,r={}){const{spatialReference:o,extent:i}=this.rasterInfo,{datumTransformation:n}=r;let s=d$2(e,o,n);if(!i.intersects(s))return {location:s,value:null};if(r$2(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return {location:e,value:null};s=e;}let a=0;if(r.srcResolution){a=j$2(r.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;}else if(a=await this.computeBestPyramidLevelForLocation(e,r),null==a)return {location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return {location:s,value:null};const{row:c,col:u,rowOffset:m,colOffset:f}=l,h=i$3(this.url,r.sliceId),d=`${a}/${c}/${u}`;let p=m$2(h,null,d);r$2(p)||(p=this.fetchRawTile(a,c,u,r),x$5(h,null,d,p));const x=await p;if(!(x&&x.pixels&&x.pixels.length>0))return {location:s,value:null};const y=m*this.rasterInfo.storageInfo.blockHeight+f;return {location:s,value:!x.mask||x.mask[y]?x.pixels.map((e=>e[y])):null,pyramidLevel:a}}async fetchPixels(e,t,o,i={}){const n=e.clone().normalize();e=n[0];const s=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(s),{datumTransformation:l}=i,c=new j$1({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/o,spatialReference:e.spatialReference}),m=i.srcResolution||(a?M$2(c,s,e,l):c);if(!m)return null;const{pyramidLevel:f,pyramidResolution:h,excessiveReading:d}=j$2(m,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let x=a?g$2(e,s,l):e;const y=e$3(this.rasterInfo.transform);if(y&&(x=y.inverseTransform(x)),null==x)return null;const I={x:Math.floor((x.xmin-p.origin.x)/h.x+.1),y:Math.floor((p.origin.y-x.ymax)/h.y+.1)},k=Math.ceil((x.xmax-x.xmin)/h.x-.1),v=Math.ceil((x.ymax-x.ymin)/h.y-.1);if(k/t>8||v/o>8)return null;const B=await this.fetchRawPixels(f,I,{width:k,height:v},i);if(!B)return null;const P=f>0?p.pyramidBlockWidth:p.blockWidth,j=f>0?p.pyramidBlockHeight:p.blockHeight;if(!a&&1===B.pixelBlocks.length&&P===t&&j===o&&m.x===c.x&&m.y===c.y)return {extent:e,srcExtent:x,pixelBlock:B.pixelBlocks[0]};const T=R$1(e,B.extent,c,l,y);let F;const S=!i.requestRawData,L={rows:T.spacing[0],cols:T.spacing[1]},{pixelBlocks:D,mosaicSize:H,isPartiallyFilled:U}=B;if(this.rasterJobHandler)F=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:H,destDimension:S?{width:t,height:o}:null,coefs:S?T.coefficients:null,sampleSpacing:S?L:null,interpolation:i.interpolation},i);else {const e=p$2(D,H);F=S?C(e,{width:t,height:o},T.coefficients,L,i.interpolation):e;}return i.requestRawData?{srcExtent:x,pixelBlock:F,transformGrid:T,extent:e,isPartiallyFilled:U}:{srcExtent:x,extent:e,pixelBlock:F}}async fetchRawPixels(e,t,r,o){const{origin:i,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:a}=this.getBlockWidthHeight(e);let{x:l,y:c}=t,{width:u,height:f}=r;o.buffer&&(l-=o.buffer.cols,c-=o.buffer.rows,u+=2*o.buffer.cols,f+=2*o.buffer.rows);const h=Math.floor(l/s),d=Math.floor(c/a),p=Math.floor((l+u-1)/s),x=Math.floor((c+f-1)/a),y=n[e];if(!y)return null;const{minRow:g,minCol:w,maxCol:I,maxRow:k}=y;if(x<g||p<w||d>k||h>I)return null;const v=[];let R,b=!1;for(let m=d;m<=x;m++)for(let t=h;t<=p;t++)m>=g&&t>=w&&k>=m&&I>=t?(R=this._fetchRawTile(e,m,t,o),this.ioConfig.allowPartialFill&&(R=new Promise((e=>{R.then((t=>e(t))).catch((()=>{b=!0,e(null);}));}))),v.push(R)):v.push(null);if(0===v.length)return null;const M$1=await Promise.all(v),C={height:(x-d+1)*s,width:(p-h+1)*a},{nativePixelSize:B,spatialReference:P}=this.rasterInfo,j=B.x*2**e,T=B.y*2**e;return {extent:new M({xmin:i.x+h*s*j,xmax:i.x+(p+1)*s*j,ymin:i.y-(x+1)*a*T,ymax:i.y-d*a*T,spatialReference:P}),pixelBlocks:M$1,mosaicSize:C,isPartiallyFilled:b}}async fetchRawTile(e,t,r,o){throw new s$1("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return g$2(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return !this.rasterJobHandler||t.useCanvas?T$1(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,r){var o,i;const{customFetchParameters:n}=this.ioConfig,{range:s,query:a,headers:l}=t;r=null!=(o=null!=(i=r)?i:t.retryCount)?o:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await U(e,{...t,query:{...a,...n},headers:{...l,...c}})}catch(u){if(r>0)return r--,this.request(e,t,r);throw u}}getSliceIndex(e){const{multidimensionalInfo:r}=this.rasterInfo;if(!r$2(r)||null==e||!e.length)return null;let o=0;const i=e[0].variableName;for(let t=0;t<r.variables.length;t++){const n=r.variables[t],s=n.dimensions;if(n.name!==i){o+=s.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const a=s.map((e=>this._getDimensionValuesCount(e))),l=s.length;for(let t=0;t<l;t++){const r=e.filter((e=>e.dimensionName===s[t].name))[0];if(null==r)return null;const i=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],n=this._getIndexFromDimensions(i,s[t]);if(-1===n)return null;a.shift(),o+=t===l-1?n:n*a.reduce(((e,t)=>e+t));}}return o}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:r,pixelSize:o}=this.rasterInfo;if(!e.tileInfo){const i=[],n=e.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let e=0;e<=n;e++)i.push({level:n-e,resolution:s,scale:a}),s*=2,a*=2;const l=new j$1({x:r.xmin,y:r.ymax,spatialReference:t});e.tileInfo=new x$4({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:i}),e.isVirtualTileInfo=!0;}}createRemoteDatasetStorageInfo(e,t=512,r=512,o){const{width:i,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=e,c=new j$1({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(i,n))/Math.LN2-8)));const m=this._computeBlockBoundary(s,a,o,512,512);e.storageInfo=new p$1({blockWidth:t,blockHeight:r,pyramidBlockWidth:t,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:m});}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,r){const{spatialReference:o,nativePixelSize:i,nativeExtent:n}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:u}=this.rasterInfo.storageInfo,m=d$2(e,o,r);if(!n.intersects(m))return null;if(t<0||t>l)return null;const f=c**t,h=f*i.x,d=f*i.y,p=(u.y-m.y)/d/a,x=(m.x-u.x)/h/s,y=Math.min(a-1,Math.floor((p-Math.floor(p))*a)),g=Math.min(s-1,Math.floor((x-Math.floor(x))*s));return {pyramidLevel:t,row:Math.floor(p),col:Math.floor(x),rowOffset:y,colOffset:g,srcLocation:m}}getTileExtent(e,t,r,o,i,n){const[s,a]=n,l=o.x+r*s*e.x,c=l+s*e.x,u=o.y-t*a*e.y,f=u-a*e.y;return new M({xmin:l,xmax:c,ymin:f,ymax:u,spatialReference:i})}getBlockWidthHeight(e){return {blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,r){const o=this.rasterInfo.storageInfo.blockBoundary[e];return !o||o.maxRow<t||o.maxCol<r||o.minRow>t||o.minCol>r}_computeBlockBoundary(e,t,r,o,i){let{x:n,y:s}=t;const a=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-a+.1*n)/o/n),maxCol:Math.floor((e.xmax-a-.1*n)/o/n),minRow:Math.floor((l-e.ymax+.1*s)/i/s),maxRow:Math.floor((l-e.ymin-.1*s)/i/s)}];if(r>0)for(let u=0;u<r;u++)n*=2,s*=2,c.push({minCol:Math.floor((e.xmin-a+.1*n)/o/n),maxCol:Math.floor((e.xmax-a-.1*n)/o/n),minRow:Math.floor((l-e.ymax+.1*s)/i/n),maxRow:Math.floor((l-e.ymin-.1*s)/i/n)});return c}_fetchRawTile(e,r,o,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:s,minCol:c,maxCol:u,maxRow:m}=n;if(r<s||o<c||r>m||o>u)return Promise.resolve(null);const f=i$3(this.url,i.sliceId),h=`${e}/${r}/${o}`;let d=m$2(f,i.registryId,h);if(!r$2(d)){const t=a$2();d=this.fetchRawTile(e,r,o,{...i,signal:t.signal}),x$5(f,i.registryId,h,d,t),d.catch((()=>{d$3(f,i.registryId,h);}));}return i.signal&&v$1(i,(()=>{h$2(f,i.registryId,h);})),d}_getIndexFromDimensions(e,t){const{extent:r,interval:o,unit:i,values:n}=t;if(null!=n&&n.length)return Array.isArray(n[0])?n.findIndex((t=>t[0]<=e&&t[1]>=e)):n.indexOf(e);if(e>r[1])return -1;const s=r[0];let a=-1;if("ISO8601"===i){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":a=Math.round((e-s)/1e3/o);break;case"minutes":a=Math.round((e-s)/6e4/o);break;case"hours":a=Math.round((e-s)/36e5/o);break;case"days":a=Math.round((e-s)/864e5/o);break;case"years":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/o);break;case"decades":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/o);}return a}return Math.round((e-s)/o)}_getDimensionValuesCount(e){const{extent:t,interval:r,unit:o,values:i}=e;let n=(null==i?void 0:i.length)||0;if(n)return n;const s=t[0];if(0===n&&"ISO8601"===o){var a;switch((null==(a=e.intervalUnit)?void 0:a.toLowerCase())||"seconds"){case"seconds":n=Math.round((t[1]-t[0])/1e3/r);break;case"minutes":n=Math.round((t[1]-t[0])/6e4/r);break;case"hours":n=Math.round((t[1]-t[0])/36e5/r);break;case"days":n=Math.round((t[1]-t[0])/864e5/r);break;case"years":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/r);break;case"decades":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/r);}return n}return Math.round((t[1]-t[0])/r)}};e$2([y$1(f$1)],S.prototype,"url",null),e$2([y$1({type:String,json:{write:!0}})],S.prototype,"datasetName",void 0),e$2([y$1({type:String,json:{write:!0}})],S.prototype,"datasetFormat",void 0),e$2([y$1()],S.prototype,"rasterInfo",void 0),e$2([y$1()],S.prototype,"ioConfig",void 0),e$2([y$1()],S.prototype,"sourceJSON",void 0),S=e$2([i$2("esri.layers.support.rasterDatasets.BaseRaster")],S);var L=S;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function t$2(e){const t=e.fields,r=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=i.map((e=>e.name)),a=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t});})),{displayFieldName:"",fields:i,features:a}}class r$1{static get supportedVersions(){return [5]}static parse(r){const n=new DataView(r),i=3&n.getUint8(0);if(3!==i)return {header:{version:i},recordSet:null};const s=n.getUint32(4,!0),a=n.getUint16(8,!0),o=n.getUint16(10,!0),l={version:i,recordCount:s,headerByteCount:a,recordByteCount:o};let p=32;const g=[],u=[];let d;if(3===i){for(;13!==n.getUint8(p);)d=String.fromCharCode(n.getUint8(p+11)).trim(),g.push({name:r$3(new Uint8Array(r,p,11)),type:d,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(d)],length:n.getUint8(p+16)}),p+=32;if(p+=1,g.length>0)for(;u.length<s&&r.byteLength-p>o;){const t=[];32===n.getUint8(p)?(p+=1,g.forEach((n=>{if("C"===n.type)t.push(r$3(new Uint8Array(r,p,n.length)).trim());else if("N"===n.type)t.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim(),10));else if("F"===n.type)t.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim()));else if("D"===n.type){const e=String.fromCharCode.apply(null,new Uint8Array(r,p,n.length)).trim();t.push(new Date(parseInt(e.substring(0,4),10),parseInt(e.substring(4,6),10)-1,parseInt(e.substring(6,8),10)));}p+=n.length;})),u.push(t)):p+=o;}}return {header:l,fields:g,records:u,recordSet:t$2({fields:g,records:u})}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
let p=class extends a$1{constructor(){super(...arguments),this.type="identity";}forwardTransform(r){return r}inverseTransform(r){return r}};e$2([y$1({json:{write:!0}})],p.prototype,"spatialReference",void 0),e$2([r$4({IdentityXform:"identity"})],p.prototype,"type",void 0),p=e$2([i$2("esri.layers.support.rasterTransforms.IdentityTransform")],p);var i$1=p;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function l$2(e,r,o){const{x:t,y:s}=r;if(o<2){return {x:e[0]+t*e[2]+s*e[4],y:e[1]+t*e[3]+s*e[5]}}if(2===o){const r=t*t,o=s*s,n=t*s;return {x:e[0]+t*e[2]+s*e[4]+r*e[6]+n*e[8]+o*e[10],y:e[1]+t*e[3]+s*e[5]+r*e[7]+n*e[9]+o*e[11]}}const n=t*t,i=s*s,f=t*s,p=n*t,l=n*s,c=t*i,a=s*i;return {x:e[0]+t*e[2]+s*e[4]+n*e[6]+f*e[8]+i*e[10]+p*e[12]+l*e[14]+c*e[16]+a*e[18],y:e[1]+t*e[3]+s*e[5]+n*e[7]+f*e[9]+i*e[11]+p*e[13]+l*e[15]+c*e[17]+a*e[19]}}function c$2(e,r,o){const{xmin:t,ymin:s,xmax:n,ymax:i,spatialReference:f}=r;let c=[];if(o<2)c.push({x:t,y:i}),c.push({x:n,y:i}),c.push({x:t,y:s}),c.push({x:n,y:s});else {let e=10;for(let r=0;r<e;r++)c.push({x:t,y:s+(i-s)*r/(e-1)}),c.push({x:n,y:s+(i-s)*r/(e-1)});e=8;for(let r=1;r<=e;r++)c.push({x:t+(n-t)*r/e,y:s}),c.push({x:t+(n-t)*r/e,y:i});}c=c.map((r=>l$2(e,r,o)));const a=c.map((e=>e.x)),u=c.map((e=>e.y));return new M({xmin:Math.min.apply(null,a),xmax:Math.max.apply(null,a),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:f})}function a(e){const[r,o,t,s,n,i]=e,f=t*i-n*s,p=n*s-t*i;return [(n*o-r*i)/f,(t*o-r*s)/p,i/f,s/p,-n/f,-t/p]}let u$3=class extends a$1{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial";}readForwardCoefficients(e,r){const{coeffX:o,coeffY:t}=r;if(null==o||!o.length||null==t||!t.length||o.length!==t.length)return null;const s=[];for(let n=0;n<o.length;n++)s.push(o[n]),s.push(t[n]);return s}writeForwardCoefficients(e,r,o){const t=[],s=[];for(let n=0;n<(null==e?void 0:e.length);n++)n%2==0?t.push(e[n]):s.push(e[n]);r.coeffX=t,r.coeffY=s;}get inverseCoefficients(){let e=this._get("inverseCoefficients");const r=this._get("forwardCoefficients");return !e&&r&&this.polynomialOrder<2&&(e=a(r)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e);}readInverseCoefficients(e,r){const{inverseCoeffX:o,inverseCoeffY:t}=r;if(null==o||!o.length||null==t||!t.length||o.length!==t.length)return null;const s=[];for(let n=0;n<o.length;n++)s.push(o[n]),s.push(t[n]);return s}writeInverseCoefficients(e,r,o){const t=[],s=[];for(let n=0;n<(null==e?void 0:e.length);n++)n%2==0?t.push(e[n]):s.push(e[n]);r.inverseCoeffX=t,r.inverseCoeffY=s;}forwardTransform(e){if("point"===e.type){const r=l$2(this.forwardCoefficients,e,this.polynomialOrder);return new j$1({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c$2(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const r=l$2(this.inverseCoefficients,e,this.polynomialOrder);return new j$1({x:r.x,y:r.y,spatialReference:e.spatialReference})}return c$2(this.inverseCoefficients,e,this.polynomialOrder)}};e$2([y$1({json:{write:!0}})],u$3.prototype,"polynomialOrder",void 0),e$2([y$1()],u$3.prototype,"forwardCoefficients",void 0),e$2([e$4("forwardCoefficients",["coeffX","coeffY"])],u$3.prototype,"readForwardCoefficients",null),e$2([o$3("forwardCoefficients")],u$3.prototype,"writeForwardCoefficients",null),e$2([y$1({json:{write:!0}})],u$3.prototype,"inverseCoefficients",null),e$2([e$4("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],u$3.prototype,"readInverseCoefficients",null),e$2([o$3("inverseCoefficients")],u$3.prototype,"writeInverseCoefficients",null),e$2([y$1({json:{write:!0}})],u$3.prototype,"spatialReference",void 0),e$2([r$4({PolynomialXform:"polynomial"})],u$3.prototype,"type",void 0),u$3=e$2([i$2("esri.layers.support.rasterTransforms.PolynomialTransform")],u$3);var m$1=u$3;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const t$1={PolynomialXform:m$1,IdentityXform:i$1},r=Object.keys(t$1);function e$1(n){const o=null==n?void 0:n.type;return !n||r.includes(o)}function l$1(n){if(!(null==n?void 0:n.type))return null;const o=t$1[null==n?void 0:n.type];if(o){const t=new o;return t.read(n),t}return null}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const g$1=new Map;g$1.set("int16","esriFieldTypeSmallInteger"),g$1.set("int32","esriFieldTypeInteger"),g$1.set("int64","esriFieldTypeInteger"),g$1.set("float32","esriFieldTypeSingle"),g$1.set("float64","esriFieldTypeDouble"),g$1.set("text","esriFieldTypeString");const y=8;let x$2=class extends L{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF";}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new s$1("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:o}=this._parseHeader(t);if("thematic"===o.dataType){const e=await this._fetchAuxiliaryInformation();o.attributeTable=e;}this._set("storageInfo",r),this._set("rasterInfo",o),this.ioConfig.retryCount=this.ioConfig.retryCount||0;}async fetchRawTile(e,t,r,o={}){const i=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(i<0)return null;const s=this._buildCacheFilePath(i,t,r,o.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,r),n=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:o.signal});if(!n)return null;const l=new Uint8Array(n.data),f=this._getTileEndAndContentType(l,a);if(0===f.recordSize)return null;const m=await this.request(s,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:o.signal});return m?this.decodePixelBlock(m.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){const t=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&"RasterInfo"===e.type&&!t.some((t=>!e[t]))}_parseHeader(e){var t,r;const o=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:i,histograms:l,colormap:c,blockWidth:u,blockHeight:d,firstPyramidLevel:h,maximumPyramidLevel:g}=e,x=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),I=e.extent.spatialReference,S=null==(t=e.geodataXform)?void 0:t.spatialReference,v=new k(null!=I&&I.wkid||null!=I&&I.wkt?I:S);let w=new M({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:v});const b=new j$1({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:v}),T=Math.round((w.xmax-w.xmin)/b.x),j=Math.round((w.ymax-w.ymin)/b.y),k$1=this._parseTransform(e.geodataXform),z=k$1?w:null;k$1&&(w=k$1.forwardTransform(w),b.x=(w.xmax-w.xmin)/T,b.y=(w.ymax-w.ymin)/j);const _=null!=(r=e.properties)?r:{},C=e.format.toLowerCase().replace("cache/",""),R=new j$1(e.origin.x,e.origin.y,v);let F,P,H,L;if(c&&c.colors)for(F=[],P=0;P<c.colors.length;P++)H=c.colors[P],L=c.values?c.values[P]:P,F.push([L,255&H,H<<16>>>24,H<<8>>>24,H>>>24]);const D=e.LODInfos,M$1=[];for(P=0;P<D.levels.length;P++)M$1.push({level:D.levels[P],resolution:D.resolutions[P],scale:96/.0254*D.resolutions[P]});const B=new x$4({dpi:96,lods:M$1,format:C,origin:R,size:[u,d],spatialReference:v}),O={recordSize:y,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*y+64},$=[{maxCol:Math.ceil(T/u)-1,maxRow:Math.ceil(j/d)-1,minCol:0,minRow:0}];let q=2;if(g>0)for(P=0;P<g;P++)$.push({maxCol:Math.ceil(T/q/u)-1,maxRow:Math.ceil(j/q/d)-1,minCol:0,minRow:0}),q*=2;const E=e.mdInfo;return {storageInfo:O,rasterInfo:new p$3({width:T,height:j,pixelType:o,bandCount:i,extent:w,nativeExtent:z,transform:k$1,spatialReference:v,pixelSize:b,keyProperties:_,statistics:x,histograms:l,multidimensionalInfo:E,colormap:F,storageInfo:new p$1({blockWidth:u,blockHeight:d,pyramidBlockWidth:u,pyramidBlockHeight:d,origin:R,tileInfo:B,firstPyramidLevel:h,maximumPyramidLevel:g,blockBoundary:$})})}}_parseTransform(e){var t,r;if(!e$1(e))throw new s$1("cloudraster:open","the data contains unsupported geodata transform types");const o=l$1(e);if("identity"===o.type)return null;if(null==(t=o.forwardCoefficients)||!t.length||null==(r=o.inverseCoefficients)||!r.length)throw new s$1("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return o}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),o=await Promise.all([t,r]);let i;if(o[0]){let e=o[0].fields;const t=o[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":g$1.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:r});}}if(!i&&o[1]){i=r$1.parse(o[1]).recordSet;}return g$3.fromJSON(i)}_buildCacheFilePath(e,r,o,i){const s=this.storageInfo.packetSize,a=Math.floor(r/s)*s,n=Math.floor(o/s)*s,l="R"+this._toHexString4(a)+"C"+this._toHexString4(n);let f="L";f+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:m}=this.rasterInfo,p=null==i?void 0:i[0];if(!r$2(m)||!p)return `${this.url}/_alllayers/${f}/${l}.bundle`;let c=m.variables.filter((e=>e.name===p.variableName))[0].dimensions[0].values.indexOf(p.values[0]).toString(16);const u=4-c.length;for(let t=0;t<u;t++)c="0"+c;return c="S"+c,`${this.url}/_alllayers/${p.variableName}/${c}/${f}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const r=this.storageInfo.packetSize,o=r*(e%r)+t%r;if(o<0)throw "Invalid level / row / col";return 20+o*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let o,i=0;for(o=0;o<5;o++)i|=(255&r[o])<<8*o;const s=0xffffffffff&i;for(i=0,o=5;o<8;o++)i|=(255&r[o])<<8*(o-5);return {position:s,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t;}return t}};e$2([y$1({readOnly:!0})],x$2.prototype,"storageInfo",void 0),e$2([y$1({type:String,json:{write:!0}})],x$2.prototype,"datasetFormat",void 0),x$2=e$2([i$2("esri.layers.support.rasterDatasets.CloudRaster")],x$2);var I$3=x$2;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
let h=class extends L{constructor(){super(...arguments),this.datasetFormat="MEMORY";}async open(t){var e;await this.init();const{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:l,nativeExtent:p,transform:c}=this.data,{width:h,height:u,pixelType:d}=s,f=this.data.extent||new M({xmin:-.5,ymin:.5,xmax:h-.5,ymax:u-.5,spatialReference:new k({wkid:3857})}),y=null!=(e=this.data.isPseudoSpatialReference)?e:!this.data.extent,x={x:f.width/h,y:f.height/u},g=new p$3({width:h,height:u,pixelType:d,extent:f,nativeExtent:p,transform:c,pixelSize:x,spatialReference:f.spatialReference,bandCount:3,keyProperties:l||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=o,this.url="/InMemory/"+o;}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(i)}async _buildInMemoryRaster(t,s,r){const a=this.rasterInfo.storageInfo.maximumPyramidLevel,m=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:s,maximumPyramidLevel:a},r):Promise.resolve(U$1(t,s,a)),n=r$2(this.rasterInfo.statistics),c=r$2(this.rasterInfo.histograms),h=n&&c?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve(r$5(t)),u=await E$1([m,h]);if(!u[0].value&&u[1].value)throw new s$1("inmemory-raster:open","failed to build in memory raster");var d,f;(this._pixelBlockTiles=u[0].value,n)||(this.rasterInfo.statistics=null==(d=u[1].value)?void 0:d.statistics);c&&(this.rasterInfo.histograms=null==(f=u[1].value)?void 0:f.histograms);}};e$2([y$1({type:String,json:{write:!0}})],h.prototype,"datasetFormat",void 0),e$2([y$1()],h.prototype,"data",void 0),h=e$2([i$2("esri.layers.support.rasterDatasets.InMemoryRaster")],h);var u$2=h;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function n$1(e,t){if(!e||!t)return [];let l=t;t.indexOf("/")>-1?(l=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const u=n$1(e,l);for(let e=0;e<u.length;e++){n$1(u[e],t).forEach((n=>r.push(n)));}return r}const u=e.getElementsByTagNameNS("*",l);if(!u||0===u.length)return [];for(let n=0;n<u.length;n++)r.push(u[n]||u.item[n]);return r}function e(t,l){if(!t||!l)return null;let r=l;l.indexOf("/")>-1?(r=l.slice(0,l.indexOf("/")),l=l.slice(l.indexOf("/")+1)):l="";const u=n$1(t,r);return u.length>0?l?e(u[0],l):u[0]:null}function t(n,t=null){const l=t?e(n,t):n;let r;return l?(r=l.textContent||l.nodeValue,r?r.trim():null):null}function l(e,t){const l=n$1(e,t),r=[];let u;for(let n=0;n<l.length;n++)u=l[n].textContent||l[n].nodeValue,u&&(u=u.trim(),""!==u&&r.push(u));return r}function u$1(n,e){return l(n,e).map((n=>Number(n)))}function o$1(n,e){const l=t(n,e);return Number(l)}function i(n,e){var t;const l=null==n||null==(t=n.nodeName)?void 0:t.toLowerCase(),r=e.toLowerCase();return l.slice(l.lastIndexOf(":")+1)===r}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
function o(e,t){if(!e||!t)return null;const n=[];for(let a=0;a<e.length;a++)n.push(e[a]),n.push(t[a]);return n}function u(e$1){var n;const r=e(e$1,"GeodataXform"),u=c$1(o$1(r,"SpatialReference/WKID")||t(r,"SpatialReference/WKT"));if("typens:PolynomialXform"!==r.getAttribute("xsi:type"))return {spatialReference:u,transform:null};const f=null!=(n=o$1(r,"PolynomialOrder"))?n:1,m=u$1(r,"CoeffX/Double"),d=u$1(r,"CoeffY/Double"),p=u$1(r,"InverseCoeffX/Double"),S=u$1(r,"InverseCoeffY/Double"),I=o(m,d),g=o(p,S);return {spatialReference:u,transform:new m$1({spatialReference:u,polynomialOrder:f,forwardCoefficients:I,inverseCoefficients:g})}}function f(e$1){var t$1;const n=o$1(e$1,"NoDataValue"),i=e(e$1,"Histograms/HistItem"),o=o$1(i,"HistMin"),u=o$1(i,"HistMax"),f=o$1(i,"BucketCount"),c=null==(t$1=t(i,"HistCounts"))?void 0:t$1.split("|").map((e=>Number(e)));let m,d,p,S;n$1(e$1,"Metadata/MDI").forEach((e=>{var t;const n=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":m=n;break;case"STATISTICS_MAXIMUM":d=n;break;case"STATISTICS_MEAN":p=n;break;case"STATISTICS_STDDEV":S=n;}}));const I=o$1(e$1,"Metadata/SourceBandIndex");return {noDataValue:n,histogram:null!=c&&c.length&&null!=m&&null!=d?{min:o,max:u,size:f||c.length,counts:c}:null,sourceBandIndex:I,statistics:null!=m&&null!=d?{min:m,max:d,avg:p,stddev:S}:null}}function c$1(t){if(!t)return null;let n=Number(t);if(!isNaN(n)&&0!==n)return new k({wkid:n});if(!(t=String(t)).startsWith("GEOGCS")&&!t.startsWith("PROJCS"))return null;const a=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),r=a[a.length-1].split(",");return "EPSG"===r[0]&&t.endsWith('"]]')&&(n=Number(r[1]),!isNaN(n)&&0!==n)?new k({wkid:n}):new k({wkt:t})}function m(e){var t$1;if("pamdataset"!==(null==e||null==(t$1=e.documentElement.tagName)?void 0:t$1.toLowerCase()))return {};const s={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach((e=>{if(1===e.nodeType)if(i(e,"SRS")){if(!s.spatialReference){const t$1=t(e);s.spatialReference=c$1(t$1);}}else if(i(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=u(e);s.transform=n,s.spatialReference||(s.spatialReference=t);}else {n$1(e,"MDI").forEach((e=>s.metadata[e.getAttribute("key")]=t(e)));}else if(i(e,"PAMRasterBand")){const t=f(e);null!=t.sourceBandIndex&&null==s.rasterBands[t.sourceBandIndex]?s.rasterBands[t.sourceBandIndex]=t:s.rasterBands.push(t);}}));const l=s.rasterBands;if(l){const e=!!l[0].statistics;s.statistics=e?l.map((e=>e.statistics)):null;const t=!!l[0].histogram;s.histograms=t?l.map((e=>e.histogram)):null;}return s}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
let d=class extends L{async open(t){await this.init();const r=await this._fetchData(t);let{spatialReference:e,statistics:s,histograms:o,transform:a}=await this._fetchAuxiliaryData(t);const i=!e;i&&(e=new k({wkid:3857})),null!=o&&o.length&&null==s&&(s=o$4(o));const{width:m,height:c}=r;let f=new M({xmin:-.5,ymin:.5-c,xmax:m-.5,ymax:.5,spatialReference:e});const h=a?a.forwardTransform(f):f;let d=!0;if(a){const t=a.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(a=null,f=h);}const x=new u$2({data:{extent:h,nativeExtent:f,transform:a,pixelBlock:r,statistics:s,histograms:o,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:i}});await x.open(),this._set("rasterInfo",x.rasterInfo),this._inMemoryRaster=x;}fetchRawTile(t,r,e,s={}){return this._inMemoryRaster.fetchRawTile(t,r,e,s)}async _fetchData(t){const{data:r}=await this.request(this.url,{responseType:"array-buffer",signal:null==t?void 0:t.signal}),e=D(r).toUpperCase();if("JPG"!==e&&"PNG"!==e&&"GIF"!==e&&"BMP"!==e)throw new s$1("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",e);return await this.decodePixelBlock(r,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(t){var e,s;const o=e$3(null==t?void 0:t.signal),n=null!=(e=this.ioConfig.skipExtensions)?e:[],l=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:o}),m$2=this.datasetFormat,p="JPG"===m$2?"jgw":"PNG"===m$2?"pgw":"BMP"===m$2?"bpw":null,c=n.indexOf(p)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+p,{responseType:"text",signal:o}),u=await E$1([l,c]);if(null!=o&&o.aborted)throw m$3();const d=m(null==(s=u[0].value)?void 0:s.data);if(!d.transform){const t=u[1].value?u[1].value.data.split("\n").slice(0,6).map((t=>Number(t))):null;d.transform=6===(null==t?void 0:t.length)?new m$1({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null;}return d}};e$2([y$1({type:String,json:{write:!0}})],d.prototype,"datasetFormat",void 0),d=e$2([i$2("esri.layers.support.rasterDatasets.ImageAuxRaster")],d);var x$1=d;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
let g=class extends L{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer";}async open(e){await this.init();const i=e&&e.signal,s=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:i});s.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const a=s.data;if(this.sourceJSON=a,!a)throw new s$1("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new s$1("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const o=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=a.cacheType,null==this.tileType&&(o.indexOf(a.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===a.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=a.name.slice(a.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:i});if(!r$2(n))throw new s$1("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?n$6(a.tileInfo,a):x$4.fromJSON(a.tileInfo),{extent:t,pixelSize:i}=n,s=.5/n.width*i.x;let l,r;const o=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==a.maxScale&&("Raster"===this.tileType?(l=e.lods.filter((e=>e.resolution===i.x))[0],l||(l=e.lods[e.lods.length-1])):(l=e.lods.filter((e=>Math.abs(e.scale-a.maxScale)<s))[0],l||(l=e.lods.filter((e=>e.scale>a.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=l.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),l||(l=o);const m=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==a.minScale&&"Elevation"===this.tileType&&(r=e.lods.filter((e=>Math.abs(e.scale-a.minScale)<s))[0],this._levelOffset=r.level-m.level),r||(r=m);const h=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-h)<s)))&&(i.x=i.y=l.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const p=l.level-r.level,[f,x]=e.size,y=e.origin;let{x:g,y:v}=i;const S=[{minCol:Math.floor((t.xmin-y.x+.1*g)/f/g),maxCol:Math.floor((t.xmax-y.x-.1*g)/f/g),minRow:Math.floor((y.y-t.ymax+.1*v)/x/v),maxRow:Math.floor((y.y-t.ymin-.1*v)/x/v)}];if(p>0)for(let a=0;a<p;a++)g*=2,v*=2,S.push({minCol:Math.floor((t.xmin-y.x+.1*g)/f/g),maxCol:Math.floor((t.xmax-y.x-.1*g)/f/g),minRow:Math.floor((y.y-t.ymax+.1*v)/x/g),maxRow:Math.floor((y.y-t.ymin-.1*v)/x/g)});n.storageInfo=new p$1({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:e,blockBoundary:S}),this._set("rasterInfo",n);}if(a.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:U$2(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new j$3({layer:e});}}async fetchRawTile(e,t,i,s={}){const{storageInfo:a,extent:l,pixelSize:r}=this.rasterInfo,o=a.maximumPyramidLevel-e+this._levelOffset,n=`${this.url}/tile/${o}/${t}/${i}`,m=this._slices?{sliceId:s.sliceId||0}:null,{data:h}=await this.request(n,{query:m,responseType:"array-buffer",signal:s.signal});if(!h)return null;const c=await this.decodePixelBlock(h,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),u=a.blockBoundary[e];if("jpg"!==a.compression||i>u.minCol&&i<u.maxCol&&t>u.minRow&&t<u.maxRow)return c;const{origin:p,blockWidth:f,blockHeight:d}=a,y=2**e,g=Math.round((l.xmin-p.x)/(r.x*y))%f,v=Math.round((l.xmax-p.x)/(r.x*y))%f,S=Math.round((p.y-l.ymax)/(r.x*y))%d,w=Math.round((p.y-l.ymin)/(r.x*y))%d,I=i===u.minCol?g:0,j=t===u.minRow?S:0,b=i===u.maxCol?v:f,M=t===u.maxRow?w:d;return d$4(c,{x:I,y:j},{width:b-I,height:M-j}),c}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let i=0;i<this._slices.length;i++){const e=this._slices[i].multidimensionalDefinition;if(e.length===t.length&&!e.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];if(!i)return !0;return (Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=await Promise.all([i,s]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;})),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let s=this.identifyPixelLocation(e,0,e$3(t.datumTransformation));if(null===s)return null;let a=0;const{maximumPyramidLevel:l}=this.rasterInfo.storageInfo;let r=l-a+this._levelOffset;const o=s.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,s.row,s.col,t))break}catch{}if(r--,a++,s=this.identifyPixelLocation(o,a,e$3(t.datumTransformation)),null===s)return null}return -1===r||null==s?null:a}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=k.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new p$3({width:i,height:s,bandCount:3,extent:M.fromJSON(t.extent),spatialReference:a,pixelSize:new j$1({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:l,signal:r}=e,c=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:l,f:"json"},signal:r}).then((e=>g$3.fromJSON(e.data))).catch((()=>null)),u=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:l,f:"json"},signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),p=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:l,f:"json"},signal:r}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),x=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:r}).then((e=>e.data)).catch((()=>{})),d=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),y=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:r}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return Promise.all([c,u,p,x,d,y]).then((e=>{let l=null;if(t.minValues&&t.minValues.length===t.bandCount){l=[];for(let e=0;e<t.minValues.length;e++)l.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]});}return this._slices=e[5]||null,new p$3({width:i,height:s,bandCount:t.bandCount,extent:M.fromJSON(t.extent),spatialReference:a,pixelSize:new j$1({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:l,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;}));})),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0);}};e$2([y$1({type:String,json:{write:!0}})],g.prototype,"datasetFormat",void 0),e$2([y$1()],g.prototype,"tileType",void 0),g=e$2([i$2("esri.layers.support.rasterDatasets.ImageServerRaster")],g);var v=g;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const w$1=new Map;w$1.set("Int8","s8"),w$1.set("UInt8","u8"),w$1.set("Int16","s16"),w$1.set("UInt16","u16"),w$1.set("Int32","s32"),w$1.set("UInt32","u32"),w$1.set("Float32","f32"),w$1.set("Float64","f32"),w$1.set("Double64","f32");const I$2=new Map;I$2.set("lerc",".lrc"),I$2.set("none",".til"),I$2.set("deflate",".pzp"),I$2.set("jpeg",".jzp");let b=class extends L{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF";}async open(t){var s;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const o=t?e$3(t.signal):null,i=await this.request(this.url,{responseType:"xml",signal:o}),{rasterInfo:a,files:n}=this._parseHeader(i.data);if(-1===(null==(s=this.ioConfig.skipExtensions)?void 0:s.indexOf("aux.xml"))){const e=await this._fetchAuxiliaryData(t);var l;if(null!=e)a.statistics=null!=(l=e.statistics)?l:a.statistics,a.histograms=e.histograms,e.histograms&&!r$2(a.statistics)&&(a.statistics=o$4(e.histograms));}this._set("rasterInfo",a),this._files=n;const p=await this.request(n.index,{responseType:"array-buffer",signal:o});this._storageIndex=this._parseIndex(p.data);let c,f,h=0,u=-1;const{blockWidth:g,blockHeight:d,compression:y}=this.rasterInfo.storageInfo,x=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:w,height:I,bandCount:b}=this.rasterInfo,A=[],j="none"===y?1:b;for(;h<this._storageIndex.length;)u++,c=Math.ceil(w/g/x**u),f=Math.ceil(I/d/x**u),h+=c*f*j*4,A.push({maxRow:f,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=A,u>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=u),this.updateTileInfo();}async fetchRawTile(t,e,r,s={}){const{blockWidth:o,blockHeight:i,blockBoundary:a,compression:n}=this.rasterInfo.storageInfo,l=a[t];if(!l||l.maxRow<e||l.maxCol<r||l.minRow>e||l.minCol>r)return null;const{bandCount:c,pixelType:f}=this.rasterInfo,{ranges:m,actualTileWidth:h,actualTileHeight:u}=this._getTileLocation(t,e,r);if(!m||0===m.length)return null;if(0===m[0].from&&0===m[0].to){const t=new Uint8Array(o*i);return new u$4({width:o,height:i,pixels:null,mask:t,validPixelCount:0})}const{bandIds:g}=this.ioConfig,d="none"===n?1:c,y=[];let x=0;for(x=0;x<d;x++)(!g||g.indexOf[x]>-1)&&y.push(this.request(this._files.data,{range:{from:m[x].from,to:m[x].to},responseType:"array-buffer",signal:s.signal}));const w=await Promise.all(y),I=w.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),b=new Uint8Array(I);let A=0;for(x=0;x<d;x++)b.set(new Uint8Array(w[x].data),A),A+=w[x].data.byteLength;const j="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",R=await this.decodePixelBlock(b.buffer,{width:o,height:i,format:j,pixelType:f});let _=0,F=0;if(h!==o||u!==i){let t=R.mask;if(t)for(x=0;x<i;x++)if(F=x*o,x<u)for(_=h;_<o;_++)t[F+_]=0;else for(_=0;_<o;_++)t[F+_]=0;else for(t=new Uint8Array(o*i),R.mask=t,x=0;x<u;x++)for(F=x*o,_=0;_<h;_++)t[F+_]=1;}return R}_parseIndex(t){if(t.byteLength%16>0)throw "invalid array buffer must be multiples of 16";let e,r,s,o,i,a;if(r$6){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o);}else e=new Uint32Array(t);return e}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i,compression:a}=this.rasterInfo.storageInfo,{width:n,height:l,bandCount:p}=this.rasterInfo,c="none"===a?1:p;let f,m,h,u=0,g=0;for(h=0;h<t;h++)g=i**h,f=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=f*m;g=i**t,f=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=e*f+r,u*=4*c;const d=this._storageIndex.subarray(u,u+4*c);let y=0,x=0;const w=[];for(let I=0;I<c;I++)y=d[4*I+0]*2**32+d[4*I+1],x=y+d[4*I+2]*2**32+d[4*I+3],w.push({from:y,to:x});return {ranges:w,actualTileWidth:r<f-1?s:Math.ceil(n/g)-s*(f-1),actualTileHeight:e<m-1?o:Math.ceil(l/g)-o*(m-1)}}_parseHeader(t$1){const e$1=e(t$1,"MRF_META/Raster");if(!e$1)throw new s$1("mrf:open","not a valid MRF format");const r=e(e$1,"Size"),s=parseInt(r.getAttribute("x"),10),o=parseInt(r.getAttribute("y"),10),p=parseInt(r.getAttribute("c"),10),f=(t(e$1,"Compression")||"none").toLowerCase();if(!f||-1===["none","lerc"].indexOf(f))throw new s$1("mrf:open","currently does not support compression "+f);const m=t(e$1,"DataType")||"UInt8",u=w$1.get(m);if(null==u)throw new s$1("mrf:open","currently does not support pixel type "+m);const x=e(e$1,"PageSize"),b=parseInt(x.getAttribute("x"),10),A=parseInt(x.getAttribute("y"),10),j=e(e$1,"DataValues");let R,_;j&&(_=j.getAttribute("NoData"),null!=_&&(R=_.trim().split(" ").map((t=>parseFloat(t)))));if(e(t$1,"MRF_META/CachedSource"))throw new s$1("mrf:open","currently does not support MRF referencing other data files");const F=e(t$1,"MRF_META/GeoTags"),M$1=e(F,"BoundingBox");if(null==M$1)throw new s$1("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const T=parseFloat(M$1.getAttribute("minx")),k$1=parseFloat(M$1.getAttribute("miny")),C=parseFloat(M$1.getAttribute("maxx")),U=parseFloat(M$1.getAttribute("maxy")),L=t(F,"Projection")||"",S=t(t$1,"datafile"),v=t(t$1,"IndexFile");let B;if("LOCAL_CS[]"!==L)if(L.toLowerCase().startsWith("epsg:")){const t=Number(L.slice(5));isNaN(t)||0===t||(B=new k({wkid:t}));}else B=c$1(L);const P=new M(T,k$1,C,U);P.spatialReference=B;const E=e(t$1,"MRF_META/Rsets"),H=parseInt(E&&E.getAttribute("scale")||"2",10),W=new p$1({origin:new j$1({x:P.xmin,y:P.ymax,spatialReference:B}),blockWidth:b,blockHeight:A,pyramidBlockWidth:b,pyramidBlockHeight:A,compression:f,pyramidScalingFactor:H}),D=new j$1({x:(C-T)/s,y:(U-k$1)/o,spatialReference:B});return {rasterInfo:new p$3({width:s,height:o,extent:P,spatialReference:B,bandCount:p,pixelType:u,pixelSize:D,noDataValue:R,storageInfo:W}),files:{mrf:this.url,index:v||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",I$2.get(f))}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==t?void 0:t.signal});return m(e)}catch{return null}}};e$2([y$1()],b.prototype,"_files",void 0),e$2([y$1()],b.prototype,"_storageIndex",void 0),e$2([y$1({type:String,json:{write:!0}})],b.prototype,"datasetFormat",void 0),b=e$2([i$2("esri.layers.support.rasterIO.MRFRaster")],b);var A=b;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const T=function(e,t){const r=e.get(t);return r&&r.values},I$1=function(e,t){const r=e.get(t);return r&&r.values[0]};let w=class extends L{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF";}async open(e){var i;await this.init();const s=e?e$3(e.signal):null,{data:l}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:s});if(!l)throw new s$1("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:p,firstIFD:c,isBigTiff:y}=b$1(l),x=[];await this.readIFDs(x,l,p,c,0,y?8:4,s);const T=y$3(x),{width:I,height:w,tileWidth:E,tileHeight:F,planes:S,pixelType:v,compression:b,firstPyramidLevel:_,maximumPyramidLevel:j,pyramidBlockWidth:R,pyramidBlockHeight:B,tileBoundary:D,affine:k,metadata:L}=T,O=M.fromJSON(T.extent),z=O.spatialReference,H=new j$1(O?{x:O.xmin,y:O.ymax,spatialReference:z}:{x:0,y:0}),P=new p$1({blockWidth:E,blockHeight:F,pyramidBlockWidth:R,pyramidBlockHeight:B,compression:b,origin:H,firstPyramidLevel:_,maximumPyramidLevel:j,blockBoundary:D}),G=new j$1({x:(O.xmax-O.xmin)/I,y:(O.ymax-O.ymin)/w,spatialReference:z}),q=L?{BandProperties:L.bandProperties,DataType:L.dataType}:{},W=new p$3({width:I,height:w,bandCount:S,pixelType:v,compression:b,pixelSize:G,storageInfo:P,spatialReference:z,keyProperties:q,extent:O,statistics:L?L.statistics:null});if(null!=k&&k.length&&(W.nativeExtent=new M({xmin:-.5,ymin:.5-w,xmax:I-.5,ymax:.5,spatialReference:z}),W.transform=new m$1({polynomialOrder:1,forwardCoefficients:[k[2]+k[0]/2,k[5]-k[3]/2,k[0],k[3],-k[1],-k[4]]}),W.extent=W.transform.forwardTransform(W.nativeExtent),W.pixelSize=new j$1({x:(O.xmax-O.xmin)/I,y:(O.ymax-O.ymin)/w,spatialReference:z}),P.origin.x=-.5,P.origin.y=.5),null==(i=this.ioConfig.skipExtensions)||!i.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var C;if(W.statistics=null!=(C=t.statistics)?C:W.statistics,W.histograms=t.histograms,t.histograms&&!r$2(W.statistics)&&(W.statistics=o$4(t.histograms)),t.transform&&!k){W.transform=t.transform,W.nativeExtent=W.extent;const e=W.transform.forwardTransform(W.nativeExtent);W.pixelSize=new j$1({x:(e.xmax-e.xmin)/I,y:(e.ymax-e.ymin)/w,spatialReference:z}),W.extent=e;}W.spatialReference||(W.spatialReference=t.spatialReference);}}if(this._set("rasterInfo",W),this._headerInfo={littleEndian:p,isBigTiff:y,ifds:x,...T},!this._headerInfo.isSupported)throw new s$1("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo();}async fetchRawTile(e,t,r,i={}){var s;if(null==(s=this._headerInfo)||!s.isSupported||this.isBlockOutside(e,t,r))return null;const a=this.getTileLocation(e,t,r);if(!a)return null;const{range:o,actualTileWidth:n,actualTileHeight:f,ifd:l}=a,{data:u}=await this.request(this.url,{range:o,responseType:"array-buffer",signal:i.signal}),{blockWidth:m,blockHeight:p}=this.getBlockWidthHeight(e),c=await this.decodePixelBlock(u,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offset:0,size:0},width:m,height:p,planes:null,pixelType:null});let h,d,y;if(n!==m||f!==p){let e=c.mask;if(e)for(h=0;h<p;h++)if(y=h*m,h<f)for(d=n;d<m;d++)e[y+d]=0;else for(d=0;d<m;d++)e[y+d]=0;else for(e=new Uint8Array(m*p),c.mask=e,h=0;h<f;h++)for(y=h*m,d=0;d<n;d++)e[y+d]=1;}return c}async readIFDs(e,t,r,i,s,a=4,o){if(!i)return null;if(i>=t.byteLength||i<0){t=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:o})).data,s=i+s,i=0;}const n=await this.readIFD(t,r,i,s,n$7.TIFF_TAGS,a,o);if(e.push(n.ifd),!n.nextIFD)return null;await this.readIFDs(e,t,r,n.nextIFD-s,s,a,o);}async readIFD(e,t,r,i,s=n$7.TIFF_TAGS,a=4,o){if(!e)return null;const n=x$6(e,t,r,i,s,a);if(n.success){const r=[];if(n.ifd.forEach((e=>{e.values||r.push(e);})),r.length>0){const s=r.map((e=>e.offlineOffsetSize)),a=Math.min.apply(null,s.map((e=>e[0])));if(Math.min.apply(null,s.map((e=>e[0]+e[1])))-a<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:"array-buffer",signal:o});e=s,i=a,r.forEach((r=>E$2(e,t,r,i)));}}if(n.ifd.has("GEOKEYDIRECTORY")){const r=n.ifd.get("GEOKEYDIRECTORY"),s=r.values;if(s&&s.length>4){const a=s[0]+"."+s[1]+"."+s[2],n=await this.readIFD(e,t,r.valueOffset+6-i,i,n$7.GEO_KEYS,2,o);r.data=n.ifd,r.data&&r.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]});}}return n}if(n.requiredBufferSize&&n.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:i,to:i+n.requiredBufferSize+4},responseType:"array-buffer",signal:o});return (e=r.data).byteLength<n.requiredBufferSize?null:this.readIFD(e,t,0,i,n$7.TIFF_TAGS,4,o)}}getTileLocation(e,t,r){const{firstPyramidLevel:i,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===e?0:e-(i-1),o=this._headerInfo.ifds[a];if(!o)return null;const n=T(o,"TILEOFFSETS");if(void 0===n)return null;const f=T(o,"TILEBYTECOUNTS"),{minRow:l,minCol:u,maxRow:m,maxCol:p}=s[a];if(t>m||r>p||t<l||r<u)return null;const c=I$1(o,"IMAGEWIDTH"),h=I$1(o,"IMAGELENGTH"),d=I$1(o,"TILEWIDTH"),y=I$1(o,"TILELENGTH"),g=t*(p+1)+r,x=n[g],w=f[g];if(null==x||null==w)return null;return {range:{from:x,to:x+w-1},ifd:o,actualTileWidth:r===p?c%d:d,actualTileHeight:t===m?h%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return m(t)}catch{return null}}};e$2([y$1()],w.prototype,"_files",void 0),e$2([y$1()],w.prototype,"_headerInfo",void 0),e$2([y$1()],w.prototype,"_bufferSize",void 0),e$2([y$1({type:String,json:{write:!0}})],w.prototype,"datasetFormat",void 0),w=e$2([i$2("esri.layers.support.rasterDatasets.TIFFRaster")],w);var E=w;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const c=new Map;c.set("CRF",{desc:"Cloud Raster Format",constructor:I$3}),c.set("MRF",{desc:"Meta Raster Format",constructor:A}),c.set("TIFF",{desc:"GeoTIFF",constructor:E}),c.set("RasterTileServer",{desc:"Raster Tile Server",constructor:v}),c.set("JPG",{desc:"JPG Raster Format",constructor:x$1}),c.set("PNG",{desc:"PNG Raster Format",constructor:x$1}),c.set("GIF",{desc:"GIF Raster Format",constructor:x$1}),c.set("BMP",{desc:"BMP Raster Format",constructor:x$1});class n{static get supportedFormats(){const t=new Set;return c.forEach(((r,e)=>t.add(e))),t}static async open(r){const{url:e,ioConfig:s,sourceJSON:o}=r;let a=r.datasetFormat;null==a&&e.lastIndexOf(".")&&(a=e.slice(e.lastIndexOf(".")+1).toUpperCase()),"OVR"===a||"TIF"===a?a="TIFF":"JPG"!==a&&"JPEG"!==a&&"JFIF"!==a||(a="JPG"),e.toLowerCase().indexOf("/imageserver")>-1&&-1===e.toLowerCase().indexOf("/wcsserver")&&(a="RasterTileServer");const n={url:e,sourceJSON:o,datasetFormat:a,ioConfig:s||{bandIds:null,sampling:null}};let i,u;if(this.supportedFormats.has(a))return i=c.get(a).constructor,u=new i(n),await u.open({signal:r.signal}),u;if(a)throw new s$1("rasterfactory:open","not a supported format "+a);const l=Array.from(c.keys());let m=0;const F=function(){return a=l[m++],a?(i=c.get(a).constructor,u=new i(n),u.open({signal:r.signal}).then((()=>u)).catch((()=>F()))):null};return F()}static register(t,r,e){c.has(t.toUpperCase())||c.set(t.toUpperCase(),{desc:r,constructor:e});}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.19/esri/copyright.txt for details.
*/
const R=o$5()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function I(){return {enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let O=class extends(t$3(s$2(o$6(l$3(u$5(x$3(l$4(b$2)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null;}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const t=r$2(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._openRaster(t)),(()=>this._openRaster(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,r;let t=[new y$4({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const o=null==(e=this.rasterInfo)||null==(r=e.attributeTable)?void 0:r.fields,i="Raster.";if(o){const e=o.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name=i+e.name,r}));t=t.concat(e);}return t}set renderer(e){this._set("renderer",e),this.updateRenderer();}readRenderer(e,r,t){const o=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,i=p$4(o,t)||void 0;if(null!=i)return i}createPopupTemplate(e){return a$3(this,e)}write(e,r){const{raster:t}=this;if(this.loaded?"RasterTileServer"===t.datasetFormat&&("Raster"===t.tileType||"Map"===t.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,r);if(r&&r.messages){const e=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new s$1("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}));}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await n.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:r}=this.raster;if(!r)throw new s$1("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings();}};e$2([y$1({type:[N$1],json:{write:{overridePolicy:I}}})],O.prototype,"bandIds",void 0),e$2([y$1({json:{write:{overridePolicy:I}}}),r$4(R)],O.prototype,"interpolation",void 0),e$2([y$1({json:{write:!0}})],O.prototype,"multidimensionalDefinition",void 0),e$2([y$1(d$5)],O.prototype,"legendEnabled",void 0),e$2([y$1({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],O.prototype,"isReference",void 0),e$2([y$1({type:["show","hide"]})],O.prototype,"listMode",void 0),e$2([y$1()],O.prototype,"sourceJSON",void 0),e$2([y$1({readOnly:!0})],O.prototype,"version",void 0),e$2([y$1()],O.prototype,"title",void 0),e$2([y$1({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),e$2([y$1({type:["ArcGISTiledImageServiceLayer"]})],O.prototype,"operationalLayerType",void 0),e$2([y$1({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:I,writer(e,r,t){r[t]=!e;}}}})],O.prototype,"popupEnabled",void 0),e$2([y$1({type:M$3,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:I}}})],O.prototype,"popupTemplate",void 0),e$2([y$1({readOnly:!0})],O.prototype,"defaultPopupTemplate",null),e$2([y$1({readOnly:!0,type:[y$4]})],O.prototype,"fields",null),e$2([y$1({types:d$1,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:I},origins:{"web-scene":{types:i$4,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],O.prototype,"renderer",null),e$2([e$4("renderer")],O.prototype,"readRenderer",null),O=e$2([i$2("esri.layers.ImageryTileLayer")],O);var x=O;

export default x;
