(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{408:function(e,t,r){"use strict";r.r(t);r(18),r(25);var i=r(0),s=(r(1),r(47)),a=r(16),o=r(103),c=r(23),n=r(112),l=r(108),p=r(58),y=r(105),b=r(110),u=r(107),h=r(116),d=r(40),m=r(142),O=r(409),j=r(366),g=r(395);r(13),r(6),r(70),r(10),r(32),r(56),r(5),r(359),r(43),r(3),r(4),r(21),r(62),r(26),r(24),r(85),r(48),r(20),r(9),r(52),r(109),r(49),r(111),r(71),r(51),r(82),r(104),r(64),r(42),r(113),r(41),r(14),r(114);let v=class extends(Object(l.a)(Object(h.a)(Object(u.a)(Object(b.a)(Object(O.b)(Object(O.c)(Object(n.a)(Object(c.i)(Object(y.a)(Object(o.b)(Object(p.b)(Object(d.a)(s.a))))))))))))){constructor(...e){super(...e),this.alwaysRefetch=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(i.P)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),Promise.resolve(this)}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.indexOf("PNG32")>-1?"png32":"png24"}writeSublayers(e,t,r,s){if(!this.loaded||!e)return;const a=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let o=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){const e=Object(i.bE)(s.origin);if(3===e){const e=this.createSublayersForOrigin("service").sublayers;o=Object(j.a)(a,e,2)}else if(e>3){const e=this.createSublayersForOrigin("portal-item");o=Object(j.a)(a,e.sublayers,Object(i.bE)(e.origin))}}const c=[],n={writeSublayerStructure:o,...s};let l=o;a.forEach((e=>{const t=e.write({},n);c.push(t),l=l||"user"===e.originOf("visible")})),c.some((e=>Object.keys(e).length>1))&&(t.layers=c),l&&(t.visibleLayers=a.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,i){const s=i&&i.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const a=new g.a({layer:this,scale:Object(m.b)({extent:e,width:t})*s}),o=a.toJSON();a.destroy();const c=!i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},n=e&&e.spatialReference,l=n.wkid||JSON.stringify(n.toJSON());o.dpi*=s;const p={};if(null!=i&&i.timeExtent){const{start:e,end:t}=i.timeExtent.toJSON();p.time=e&&t&&e===t?""+e:`${null==e?"null":e},${null==t?"null":t}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(p.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+r,...o,...c,...p}}async fetchImage(e,t,r,s){const a={responseType:"image"};s&&s.timestamp&&(a.query={...a.query,_ts:s.timestamp}),s&&s.signal&&(a.signal=s.signal),this.customParameters&&Object.keys(this.customParameters).length&&(a.query={...this.customParameters,...a.query});const o=this.parsedUrl.path+"/export",c={...this.parsedUrl.query,...this.createExportImageParameters(e,t,r,s),f:"image",_ts:this.alwaysRefetch?Date.now():null};return null==c.dynamicLayers||this.capabilities.exportMap.supportsDynamicLayers?(a.query?a.query={...c,...a.query}:a.query=c,Object(i.C)(o,a).then((e=>e.data)).catch((e=>{if(Object(i.B)(e))throw e;throw new i.s("mapimagelayer:image-fetch-error",`Unable to load image: ${o}`,{error:e})}))):Promise.reject(new i.s("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:c}))}async fetchRecomputedExtents(e={}){const t={...e,query:{returnUpdates:!0,f:"json"}},{data:r}=await Object(i.C)(this.url,t),{extent:s,fullExtent:o,timeExtent:c}=r,n=s||o;return{fullExtent:n&&i.M.fromJSON(n),timeExtent:c&&a.a.fromJSON({start:c[0],end:c[1]})}}loadAll(){return Object(i.d)(this,(e=>{e(this.allSublayers)}))}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await Object(i.C)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}};Object(i.e)([Object(i.y)()],v.prototype,"alwaysRefetch",void 0),Object(i.e)([Object(i.y)()],v.prototype,"dpi",void 0),Object(i.e)([Object(i.y)()],v.prototype,"gdbVersion",void 0),Object(i.e)([Object(i.y)()],v.prototype,"imageFormat",void 0),Object(i.e)([Object(i.a1)("imageFormat",["supportedImageFormatTypes"])],v.prototype,"readImageFormat",null),Object(i.e)([Object(i.y)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],v.prototype,"imageMaxHeight",void 0),Object(i.e)([Object(i.y)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],v.prototype,"imageMaxWidth",void 0),Object(i.e)([Object(i.y)()],v.prototype,"imageTransparency",void 0),Object(i.e)([Object(i.y)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],v.prototype,"isReference",void 0),Object(i.e)([Object(i.y)({json:{read:!1,write:!1}})],v.prototype,"labelsVisible",void 0),Object(i.e)([Object(i.y)({type:["ArcGISMapServiceLayer"]})],v.prototype,"operationalLayerType",void 0),Object(i.e)([Object(i.y)({json:{read:!1,write:!1}})],v.prototype,"popupEnabled",void 0),Object(i.e)([Object(i.y)()],v.prototype,"sourceJSON",void 0),Object(i.e)([Object(i.y)({json:{write:{ignoreOrigin:!0}}})],v.prototype,"sublayers",void 0),Object(i.e)([Object(i.o)("sublayers",{layers:{type:[O.a]},visibleLayers:{type:[i.N]}})],v.prototype,"writeSublayers",null),Object(i.e)([Object(i.y)({type:["show","hide","hide-children"]})],v.prototype,"listMode",void 0),Object(i.e)([Object(i.y)({json:{read:!1},readOnly:!0,value:"map-image"})],v.prototype,"type",void 0),Object(i.e)([Object(i.y)(c.f)],v.prototype,"url",void 0),v=Object(i.e)([Object(i.i)("esri.layers.MapImageLayer")],v);var f=v;t.default=f}}]);