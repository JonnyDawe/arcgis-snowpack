(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{420:function(e,t,o){"use strict";o.r(t);o(18);var r=o(0),i=o(1),l=o(4),s=o(47),c=o(103),n=o(23),a=o(108),p=o(105),y=o(110),b=o(107);o(6),o(13),o(16),o(70),o(10);const u=["atom","xml"],d={base:l.u,key:"type",typeMap:{"simple-line":l.m},errorContext:"symbol"},j={base:l.u,key:"type",typeMap:{"picture-marker":l.r,"simple-marker":l.F},errorContext:"symbol"},O={base:l.u,key:"type",typeMap:{"simple-fill":l.B},errorContext:"symbol"};let S=class extends(Object(a.a)(Object(y.a)(Object(n.i)(Object(p.a)(Object(b.a)(Object(c.b)(s.a))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?Object(r.bZ)(this.url,u)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}load(e){const t=Object(r.P)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await Object(r.C)(i.l.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};Object(r.e)([Object(r.y)()],S.prototype,"description",void 0),Object(r.e)([Object(r.y)({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],S.prototype,"title",null),Object(r.e)([Object(r.y)()],S.prototype,"featureCollections",void 0),Object(r.e)([Object(r.a1)("service","featureCollections",["featureCollection.layers"])],S.prototype,"readFeatureCollections",null),Object(r.e)([Object(r.y)(n.c)],S.prototype,"id",void 0),Object(r.e)([Object(r.y)(n.e)],S.prototype,"legendEnabled",void 0),Object(r.e)([Object(r.y)({types:d,json:{write:!0}})],S.prototype,"lineSymbol",void 0),Object(r.e)([Object(r.y)({type:["show","hide"]})],S.prototype,"listMode",void 0),Object(r.e)([Object(r.y)({types:j,json:{write:!0}})],S.prototype,"pointSymbol",void 0),Object(r.e)([Object(r.y)({types:O,json:{write:!0}})],S.prototype,"polygonSymbol",void 0),Object(r.e)([Object(r.y)({type:["GeoRSS"]})],S.prototype,"operationalLayerType",void 0),Object(r.e)([Object(r.y)()],S.prototype,"outSpatialReference",void 0),Object(r.e)([Object(r.y)(n.f)],S.prototype,"url",void 0),Object(r.e)([Object(r.y)({readOnly:!0,json:{read:!1},value:"geo-rss"})],S.prototype,"type",void 0),S=Object(r.e)([Object(r.i)("esri.layers.GeoRSSLayer")],S);var h=S;t.default=h}}]);