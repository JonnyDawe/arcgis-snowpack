(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{231:function(e,t,r){"use strict";r.r(t);var i=r(0),s=(r(1),r(12)),a=r(106),o=r(383),n=r(20),c=r(53);r(9),r(360),r(3),r(6),r(4),r(13),r(52),r(51),r(82);function l(e){return c.default.fromJSON(e).features.map((e=>e.geometry))}let u=class extends i.a{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return l(e)}readIncidents(e){return l(e)}readPointBarriers(e,t){return l(t.barriers)}readPolylineBarriers(e){return l(e)}readPolygonBarriers(e){return l(e)}readRoutes(e){return(t=e).features.map((e=>{const r=i.A.fromJSON(t.spatialReference),s=n.a.fromJSON(e);return Object(i.P)(s.geometry)&&(s.geometry.spatialReference=r),s}));var t}};Object(i.e)([Object(i.y)({type:[o.c]})],u.prototype,"directions",void 0),Object(i.e)([Object(i.y)({type:[i._]})],u.prototype,"facilities",void 0),Object(i.e)([Object(i.a1)("facilities")],u.prototype,"readFacilities",null),Object(i.e)([Object(i.y)({type:[i._]})],u.prototype,"incidents",void 0),Object(i.e)([Object(i.a1)("incidents")],u.prototype,"readIncidents",null),Object(i.e)([Object(i.y)({type:[o.a]})],u.prototype,"messages",void 0),Object(i.e)([Object(i.y)({type:[i._]})],u.prototype,"pointBarriers",void 0),Object(i.e)([Object(i.a1)("pointBarriers",["barriers"])],u.prototype,"readPointBarriers",null),Object(i.e)([Object(i.y)({type:[i.aJ]})],u.prototype,"polylineBarriers",void 0),Object(i.e)([Object(i.a1)("polylineBarriers")],u.prototype,"readPolylineBarriers",null),Object(i.e)([Object(i.y)({type:[i.au]})],u.prototype,"polygonBarriers",void 0),Object(i.e)([Object(i.a1)("polygonBarriers")],u.prototype,"readPolygonBarriers",null),Object(i.e)([Object(i.y)({type:[n.a]})],u.prototype,"routes",void 0),Object(i.e)([Object(i.a1)("routes")],u.prototype,"readRoutes",null),u=Object(i.e)([Object(i.i)("esri.tasks.support.ClosestFacilitySolveResult")],u);var p=u;const b=Object(o.h)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});let y=class extends(Object(o.b)(s.c)){constructor(e){super(e),this.url=null}solve(e,t){return async function(e,t,r){const n=[],c=[],l={},u={},y=Object(s.d)(e);return t.incidents&&t.incidents.features&&Object(o.f)(t.incidents.features,c,"incidents.features",l),t.facilities&&t.facilities.features&&Object(o.f)(t.facilities.features,c,"facilities.features",l),t.pointBarriers&&t.pointBarriers.features&&Object(o.f)(t.pointBarriers.features,c,"pointBarriers.features",l),t.polylineBarriers&&t.polylineBarriers.features&&Object(o.f)(t.polylineBarriers.features,c,"polylineBarriers.features",l),t.polygonBarriers&&t.polygonBarriers.features&&Object(o.f)(t.polygonBarriers.features,c,"polygonBarriers.features",l),Object(a.a)(c).then((e=>{for(const t in l){const r=l[t];n.push(t),u[t]=e.slice(r[0],r[1])}return Object(o.i)(u,n)?Object(o.d)(y.path):Promise.resolve({dontCheck:!0})})).then((e=>{("dontCheck"in e?e.dontCheck:e.hasZ)||Object(o.g)(u,n);for(const e in u)u[e].forEach(((r,i)=>{t.get(e)[i].geometry=r}));let s={query:{...y.query,f:"json",...b.toQueryParams(t)}};return r&&(s={...r,...s}),Object(i.C)(`${y.path}/solveClosestFacility`,s)})).then((e=>p.fromJSON(e.data)))}(this.url,e,t)}};Object(i.e)([Object(i.y)()],y.prototype,"url",void 0),y=Object(i.e)([Object(i.i)("esri.tasks.ClosestFacilityTask")],y);var O=y;t.default=O}}]);