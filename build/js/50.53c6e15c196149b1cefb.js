(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{515:function(e,t,s){"use strict";s.r(t);var i=s(0),a=(s(1),s(109)),r=s(314),n=s(414),o=s(340),d=s(415);s(14),s(9),s(16),s(51),s(6),s(82),s(54),s(40),s(5);class c{constructor(e,t){this.offset=e,this.extent=t}}let l=class extends d.a{constructor(){super(...arguments),this.type="heatmap",this._tileKeyToFeatureSets=new Map}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))])}async update(e,t){const s=t.schema.processors[0];"heatmap"===s.type&&Object(a.b)(this._schema,s)&&(e.mesh=!0,this._schema=s)}onTileUpdate(e){for(const t of e.removed)this._tileKeyToFeatureSets.delete(t.key.id)}onTileClear(e){return this._tileKeyToFeatureSets.delete(e.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:{clear:!0}})}async onTileMessage(e,t,s){this._tileKeyToFeatureSets.has(e.key.id)||this._tileKeyToFeatureSets.set(e.key.id,new Map);const a=this._tileKeyToFeatureSets.get(e.key.id);if(Object(i.P)(t.addOrUpdate)&&t.addOrUpdate.hasFeatures&&a.set(t.addOrUpdate.instance,t),t.end){const t=[],a=function(e){const t=e.key,s=new Map,i=256,a=r.B,n=e.tileInfoView.tileInfo.isWrappable;return s.set(Object(o.a)(t,-1,-1,n).id,new c([-a,-a],[a-i,a-i,a,a])),s.set(Object(o.a)(t,0,-1,n).id,new c([0,-a],[0,a-i,a,a])),s.set(Object(o.a)(t,1,-1,n).id,new c([a,-a],[0,a-i,i,a])),s.set(Object(o.a)(t,-1,0,n).id,new c([-a,0],[a-i,0,a,a])),s.set(Object(o.a)(t,1,0,n).id,new c([a,0],[0,0,i,a])),s.set(Object(o.a)(t,-1,1,n).id,new c([-a,a],[a-i,0,a,i])),s.set(Object(o.a)(t,0,1,n).id,new c([0,a],[0,0,a,i])),s.set(Object(o.a)(t,1,1,n).id,new c([a,a],[0,0,i,i])),s}(e);this._tileKeyToFeatureSets.forEach(((s,r)=>{if(r===e.key.id)s.forEach((e=>Object(i.c6)(e.addOrUpdate,(e=>t.push(e)))));else if(a.has(r)){const e=a.get(r),[n,o]=e.offset;s.forEach((e=>Object(i.c6)(e.addOrUpdate,(e=>{const s=e.transform(n,o,1,1);t.push(s)}))))}}));const d=Object(n.c)(t,this._schema.mesh,512,512),l={tileKey:e.key.id,intensityInfo:d},h=[d.matrix];return this.remoteClient.invoke("tileRenderer.onTileData",l,{...s,transferList:h})}}onTileError(e,t,s){return this.remoteClient.invoke("tileRenderer.onTileError",{tileKey:e.id,error:t},s)}};l=Object(i.e)([Object(i.i)("esri.views.2d.layers.features.processors.HeatmapProcessor")],l);var h=l;t.default=h}}]);