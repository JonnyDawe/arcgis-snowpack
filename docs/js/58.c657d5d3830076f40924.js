(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{283:function(e,i,t){"use strict";t.r(i);t(25);var s=t(0),a=(t(1),t(86)),l=t(12),n=t(90),o=t(394),r=t(335),h=t(342),p=t(346),c=t(345),d=t(365);t(31),t(8),t(10),t(137),t(20),t(9),t(3),t(6),t(4),t(13),t(52),t(49),t(21),t(62),t(26),t(24),t(85),t(48),t(70),t(109),t(111),t(71),t(53),t(51),t(82),t(336),t(40),t(5),t(317),t(318),t(310),t(84),t(113),t(41),t(314),t(122),t(106),t(337),t(333),t(313),t(312),t(320),t(330),t(7),t(19),t(35),t(54),t(334),t(338),t(344),t(339),t(14),t(16),t(329),t(83),t(17),t(322),t(324),t(104),t(331),t(340),t(341),t(321),t(327),t(328),t(316),t(343),t(332),t(11),t(138),t(43),t(72),t(2),t(15),t(75),t(27),t(89),t(44),t(63),t(55),t(119),t(120),t(115),t(47),t(103),t(32),t(57),t(23),t(112),t(108),t(58),t(105),t(110),t(107),t(56),t(116),t(36),t(64),t(42),t(121),t(117),t(114),t(66),t(118),t(123),t(73),t(65),t(74),t(67),t(325),t(323),t(319),t(326);class b{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let y=class extends(Object(r.b)(r.a)){constructor(){super(...arguments),this._handles=new s.w,this._bitmapIndex=new Map,this._mapImageContainer=new d.a,this._kmlVisualData=new b,this.allVisiblePoints=new n.a,this.allVisiblePolylines=new n.a,this.allVisiblePolygons=new n.a,this.allVisibleMapImages=new s.L}hitTest(e,i){if(this.suspended||!this._pointsView&&!this._polylinesView&&!this._polygonsView)return Promise.resolve(null);const t=[this._pointsView.hitTest(e,i),this._polylinesView.hitTest(e,i),this._polygonsView.hitTest(e,i)];return Promise.all(t).then((e=>e.filter((e=>(e&&(e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)))}))]),this.container.addChild(this._mapImageContainer),this._polygonsView=new h.a({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new p.a(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new h.a({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new p.a(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new h.a({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new p.a(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.watch("layer.visibleSublayers",(e=>{for(const[e,i]of this._kmlVisualData.allSublayers)i.visibility=0;for(const i of e){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1)}this._refreshCollections()})),this._fetchingPromise=this._fetchService().then((()=>{this._fetchingPromise=null,this.notifyChange("updating")}))}detach(){this._handles.removeAll(),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return null!=this._fetchingPromise||this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&Object(s.C)(e.href,{responseType:"image"}).then((({data:i})=>{let t=s.M.fromJSON(e.extent);Object(s.ah)(t,this.view.spatialReference)&&(t=Object(s.ai)(t,this.view.spatialReference));const a=new c.a(i,"standard");a.x=t.xmin,a.y=t.ymax,a.resolution=t.width/i.naturalWidth,a.rotation=e.rotation,this._mapImageContainer.addChild(a),this._bitmapIndex.set(e,a)}))}async _getViewDependentUrl(e,i){const{viewFormat:t,viewBoundScale:n,httpQuery:o}=e;if(Object(s.P)(t)){if(Object(s.J)(i))throw new Error("Loading this network link requires a view state.");let r;if(await Object(a.a)(),Object(s.P)(n)&&1!==n){const e=new s.M(i.extent);e.expand(n),r=e}else r=i.extent;r=Object(a.b)(r,s.A.WGS84);const h=Object(a.b)(r,s.A.WebMercator),p=r.xmin,c=r.xmax,d=r.ymin,b=r.ymax,y=i.size[0]*i.pixelRatio,w=i.size[1]*i.pixelRatio,m=Math.max(h.width,h.height),g={"[bboxWest]":p.toString(),"[bboxEast]":c.toString(),"[bboxSouth]":d.toString(),"[bboxNorth]":b.toString(),"[lookatLon]":r.center.x.toString(),"[lookatLat]":r.center.y.toString(),"[lookatRange]":m.toString(),"[lookatTilt]":"0","[lookatHeading]":i.rotation.toString(),"[lookatTerrainLon]":r.center.x.toString(),"[lookatTerrainLat]":r.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":r.center.x.toString(),"[cameraLat]":r.center.y.toString(),"[cameraAlt]":m.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":y.toString(),"[vertPixels]":w.toString(),"[terrainEnabled]":"0","[clientVersion]":s.aF,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},u=e=>{for(const i in e)for(const t in g)e[i]=e[i].replace(t,g[t])},_=Object(s.c0)(t);u(_);let V={};Object(s.P)(o)&&(V=Object(s.c0)(o),u(V));const v=Object(l.d)(e.href);return v.query={...v.query,..._,...V},`${v.path}?${Object(s.bU)(_)}`}return e.href}async _fetchService(){const e=new b;await this._loadVisualData(this.layer.url,e),this._kmlVisualData=e,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)))}_isSublayerVisible(e){const i=this._kmlVisualData.allSublayers.get(e);return!!i.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))}_loadVisualData(e,i){return this._fetchParsedKML(e).then((async e=>{for(const t of e.sublayers){i.allSublayers.set(t.id,t);const e=t.points?await Object(o.b)(t.points):[],s=t.polylines?await Object(o.b)(t.polylines):[],a=t.polygons?await Object(o.b)(t.polygons):[],l=t.mapImages||[];if(i.allPoints.push(...e.map((e=>({item:e,sublayerId:t.id})))),i.allPolylines.push(...s.map((e=>({item:e,sublayerId:t.id})))),i.allPolygons.push(...a.map((e=>({item:e,sublayerId:t.id})))),i.allMapImages.push(...l.map((e=>({item:e,sublayerId:t.id})))),t.networkLink){const e=await this._getViewDependentUrl(t.networkLink,this.view.state);await this._loadVisualData(e,i)}}}))}_fetchParsedKML(e){return Object(o.d)(e,this.view.spatialReference,this.layer.refreshInterval).then((e=>Object(o.c)(e.data)))}_removeMapImage(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e))}};Object(s.e)([Object(s.y)()],y.prototype,"_pointsView",void 0),Object(s.e)([Object(s.y)()],y.prototype,"_polylinesView",void 0),Object(s.e)([Object(s.y)()],y.prototype,"_polygonsView",void 0),Object(s.e)([Object(s.y)()],y.prototype,"_fetchingPromise",void 0),Object(s.e)([Object(s.y)()],y.prototype,"updating",void 0),y=Object(s.e)([Object(s.i)("esri.views.2d.layers.KMLLayerView2D")],y);var w=y;i.default=w}}]);